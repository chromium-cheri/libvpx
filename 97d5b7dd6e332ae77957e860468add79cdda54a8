{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0bf9938d_4f7d7192",
        "filename": "av1/common/mv.h",
        "patchSetId": 10
      },
      "lineNbr": 65,
      "author": {
        "id": 1170389
      },
      "writtenOn": "2016-11-09T10:49:01Z",
      "side": 1,
      "message": "Should the parameter count for HOMOGRAPHY be 8, as the last parameter is assumed to be 1? (same goes for the comment below about wmmat[9])",
      "range": {
        "startLine": 65,
        "startChar": 55,
        "endLine": 65,
        "endChar": 56
      },
      "revId": "97d5b7dd6e332ae77957e860468add79cdda54a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8baca39c_ce421c09",
        "filename": "av1/common/mv.h",
        "patchSetId": 10
      },
      "lineNbr": 85,
      "author": {
        "id": 1137754
      },
      "writtenOn": "2016-11-08T21:00:06Z",
      "side": 1,
      "message": "Maybe these comments should be updated to show these in terms of the homography",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 85,
        "endChar": 11
      },
      "revId": "97d5b7dd6e332ae77957e860468add79cdda54a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8baca39c_0e241476",
        "filename": "av1/common/warped_motion.c",
        "patchSetId": 10
      },
      "lineNbr": 75,
      "author": {
        "id": 1137754
      },
      "writtenOn": "2016-11-08T21:00:06Z",
      "side": 1,
      "message": "Just a cosmetic suggestion, but if you are changing the way the parameters are stored in mat such that mat[4] \u003d\u003d -mat[3], mat[2] \u003d\u003d mat[5], you might as well just use mat[4] and mat[5] here so the y computation becomes: \n\nmat[4] * x + mat[5] * y + mat[1].\n\nAlso seems like now global_rotzoom and global_affine can just map to the same transformation type and we don\u0027t really need both project_points_rotzoom and project_points_affine.",
      "range": {
        "startLine": 75,
        "startChar": 43,
        "endLine": 75,
        "endChar": 78
      },
      "revId": "97d5b7dd6e332ae77957e860468add79cdda54a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8baca39c_0eafb4cb",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 10
      },
      "lineNbr": 4309,
      "author": {
        "id": 1137754
      },
      "writtenOn": "2016-11-08T21:00:06Z",
      "side": 1,
      "message": "I think you\u0027ll need to call get_gm_type here. It is possible that the parameters were set back to default in encode frame and gmtype was not set to GLOBAL_ZERO.",
      "range": {
        "startLine": 4309,
        "startChar": 10,
        "endLine": 4309,
        "endChar": 20
      },
      "revId": "97d5b7dd6e332ae77957e860468add79cdda54a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "97d5b7dd6e332ae77957e860468add79cdda54a8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "97d5b7dd6e332ae77957e860468add79cdda54a8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "97d5b7dd6e332ae77957e860468add79cdda54a8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "97d5b7dd6e332ae77957e860468add79cdda54a8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "97d5b7dd6e332ae77957e860468add79cdda54a8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}