{
  "comments": [
    {
      "key": {
        "uuid": "576a9da9_940e8fbf",
        "filename": "test/encode_test_driver.cc",
        "patchSetId": 25
      },
      "lineNbr": 205,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2017-12-18T21:25:39Z",
      "side": 1,
      "message": "would a PostEncodeFrameHook work to match the existing calls? can this not be done in the FramePkt hook due to the potential for drops?",
      "revId": "3751af621efda52874c97148bbedecc16cf9147d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fce3db97_ff13713b",
        "filename": "test/encode_test_driver.cc",
        "patchSetId": 25
      },
      "lineNbr": 205,
      "author": {
        "id": 1126910
      },
      "writtenOn": "2017-12-19T03:31:25Z",
      "side": 1,
      "message": "Yes we need it here to handle frame drops. The FramePkt can detect frame drops, but it does not know what the temporal layer_id was for those dropped frames (and that is needed to update the buffer level correctly).",
      "parentUuid": "576a9da9_940e8fbf",
      "revId": "3751af621efda52874c97148bbedecc16cf9147d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bacb2d3_4379bd14",
        "filename": "test/encode_test_driver.cc",
        "patchSetId": 25
      },
      "lineNbr": 205,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2017-12-19T06:51:25Z",
      "side": 1,
      "message": "\u003e Yes we need it here to handle frame drops. The FramePkt can detect frame drops, but it does not know what the temporal layer_id was for those dropped frames (and that is needed to update the buffer level correctly).\n\nOK, then maybe PostEncodeFrameHook; you could hide the pass and end_usage check in the implementation",
      "parentUuid": "fce3db97_ff13713b",
      "revId": "3751af621efda52874c97148bbedecc16cf9147d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}