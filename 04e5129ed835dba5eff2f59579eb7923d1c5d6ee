{
  "comments": [
    {
      "key": {
        "uuid": "9a2e9c8f_8b554dda",
        "filename": "vpx_dsp/blend_mask6.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1137274
      },
      "writtenOn": "2016-07-08T20:39:58Z",
      "side": 1,
      "message": "How is this not going to clash with an orthogonal future function which uses 8 bits?",
      "range": {
        "startLine": 14,
        "startChar": 8,
        "endLine": 14,
        "endChar": 17
      },
      "revId": "04e5129ed835dba5eff2f59579eb7923d1c5d6ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a142433_d33b0cd7",
        "filename": "vpx_dsp/blend_mask6.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1002029
      },
      "writtenOn": "2016-07-08T21:17:00Z",
      "side": 1,
      "message": "also: if it\u0027s a format constant (as in: it\u0027ll end up in a spec), it should probably be gathered in a collective .h file (like: format_constants.h), along with other scattered constants...",
      "range": {
        "startLine": 14,
        "startChar": 18,
        "endLine": 14,
        "endChar": 19
      },
      "revId": "04e5129ed835dba5eff2f59579eb7923d1c5d6ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a142433_1332a4ff",
        "filename": "vpx_dsp/blend_mask6.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1002029
      },
      "writtenOn": "2016-07-08T21:17:00Z",
      "side": 1,
      "message": "yes, it should be prefixed otherwise it\u0027s going to be too generic as a name.\n\nWhat about BLEND_MASK_BITS ?\nor BLEND_MASK_PRECISION?",
      "parentUuid": "9a2e9c8f_8b554dda",
      "range": {
        "startLine": 14,
        "startChar": 8,
        "endLine": 14,
        "endChar": 17
      },
      "revId": "04e5129ed835dba5eff2f59579eb7923d1c5d6ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}