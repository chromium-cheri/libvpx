{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8171ec6e_f0e5f859",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2021-06-21T22:42:30Z",
      "side": 1,
      "message": "This will be somewhat problematic because it will now make the main library depend on C++. This is a breaking change.",
      "revId": "24a919172df82d585554c040c5aac3cbfb105aef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c6a1ae5_5a2ce4f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2021-06-22T23:32:07Z",
      "side": 1,
      "message": "Ah I may have misremembered when I posted my first comment. I guess the main issue is now we produce a libsimple_encode.a which shadows the C symbols from libvpx.a",
      "revId": "24a919172df82d585554c040c5aac3cbfb105aef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45ddbff0_49612ff7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132564
      },
      "writtenOn": "2021-06-23T01:42:23Z",
      "side": 1,
      "message": "I guess we don\u0027t need libsimple_encode.a anymore?",
      "parentUuid": "0c6a1ae5_5a2ce4f9",
      "revId": "24a919172df82d585554c040c5aac3cbfb105aef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7b6c30a_1c29ecf5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132564
      },
      "writtenOn": "2021-06-23T01:52:06Z",
      "side": 1,
      "message": "If this is an issue, we don\u0027t need to include simple_encode.cc and simple_encode.h in libvpx.a",
      "parentUuid": "8171ec6e_f0e5f859",
      "revId": "24a919172df82d585554c040c5aac3cbfb105aef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74505c36_bad900ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132564
      },
      "writtenOn": "2021-06-23T01:52:06Z",
      "side": 1,
      "message": "Or we can create a target simple_encode on google3 that depends on libvpx.\nI will need to figure out how it works on google3.",
      "parentUuid": "45ddbff0_49612ff7",
      "revId": "24a919172df82d585554c040c5aac3cbfb105aef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c673ee26_82d34548",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2021-06-23T17:28:38Z",
      "side": 1,
      "message": "\u003e Or we can create a target simple_encode on google3 that depends on libvpx.\n\u003e I will need to figure out how it works on google3.\n\nA separate lib with a dependency on libvpx would be safest, but we may run into issues if you want to access private functions. For custom configurations we could enable this, but if we\u0027re going to leave things as is I\u0027d prefer to keep it off by default. We can move it from the experimental group though.",
      "parentUuid": "74505c36_bad900ea",
      "revId": "24a919172df82d585554c040c5aac3cbfb105aef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63babea4_b9c35f0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132564
      },
      "writtenOn": "2021-06-29T17:25:22Z",
      "side": 1,
      "message": "The issue is if we use a different compile flag, we suffer from duplicate symbols again. You can\u0027t use libvpx and this library at the same time.\n\nI tested the performance already. It doesn\u0027t affect the default performance.\nCoding stats remains the same.",
      "parentUuid": "c673ee26_82d34548",
      "revId": "24a919172df82d585554c040c5aac3cbfb105aef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7a7959a_80a47340",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2021-06-29T19:23:12Z",
      "side": 1,
      "message": "\u003e The issue is if we use a different compile flag, we suffer from duplicate symbols again. You can\u0027t use libvpx and this library at the same time.\n\u003e \n\nRight, I was thinking of simple encode as a separate lib that could call into libvpx via public functions, not try to bundle the entire library into one.\n\n\u003e I tested the performance already. It doesn\u0027t affect the default performance.\n\u003e Coding stats remains the same.",
      "parentUuid": "63babea4_b9c35f0a",
      "revId": "24a919172df82d585554c040c5aac3cbfb105aef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba3814a1_baa78883",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132564
      },
      "writtenOn": "2021-06-29T21:03:54Z",
      "side": 1,
      "message": "Great. I will make sure simple_encode.cc and .h are not included in libvpx.\nStill need to figure how to achieve that.\nWill work on this CL later this week or early next week again.\nThanks for the comments.",
      "parentUuid": "a7a7959a_80a47340",
      "revId": "24a919172df82d585554c040c5aac3cbfb105aef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}