{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "51a440e2_0243213d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1608754
      },
      "writtenOn": "2023-11-03T15:47:32Z",
      "side": 1,
      "message": "Will this patch be made available for m118?",
      "revId": "3fbd1dca6a4d2dad332a2110d646e4ffef36d590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "703e5513_4687a517",
        "filename": "vp8/encoder/onyx_if.c",
        "patchSetId": 3
      },
      "lineNbr": 1453,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-09-29T23:43:57Z",
      "side": 1,
      "message": "James: I am wondering if `vp8e_set_config()` should return an error if it detects an attempt to change thread counts, rather than silently ignore the thread count change.\n\nBefore this CL, an attempt to chage thread counts would result in a crash. It should be acceptable to replace a crash with a graceful error return, and applications will know that the requested change is not granted.",
      "revId": "3fbd1dca6a4d2dad332a2110d646e4ffef36d590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a13866d_4c8b62ef",
        "filename": "vp8/encoder/onyx_if.c",
        "patchSetId": 3
      },
      "lineNbr": 1453,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-09-29T23:47:34Z",
      "side": 1,
      "message": "After this CL, some applications may start to depend on libvpx ignoring the thread count change, and we won\u0027t be able to change `vp8e_set_config()` to return an error in the future.",
      "parentUuid": "703e5513_4687a517",
      "revId": "3fbd1dca6a4d2dad332a2110d646e4ffef36d590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a56b24d_267dc8b7",
        "filename": "vp8/encoder/onyx_if.c",
        "patchSetId": 3
      },
      "lineNbr": 1453,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-09-30T19:01:11Z",
      "side": 1,
      "message": "I found that it was not easy to detect the condition under which a thread count change would be problematic. However, I managed to write a CL to allow thread count changes in VP8: https://chromium-review.googlesource.com/c/webm/libvpx/+/4906998",
      "parentUuid": "5a13866d_4c8b62ef",
      "revId": "3fbd1dca6a4d2dad332a2110d646e4ffef36d590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54bfe719_08ef0bda",
        "filename": "vp8/encoder/onyx_if.c",
        "patchSetId": 3
      },
      "lineNbr": 1453,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2023-10-04T01:43:47Z",
      "side": 1,
      "message": "\u003e Before this CL, an attempt to chage thread counts would result in a crash. It should be acceptable to replace a crash with a graceful error return, and applications will know that the requested change is not granted.\n\nIt would only crash in some cases. If we were to change the behavior it could be a breaking change for some applications.",
      "parentUuid": "0a56b24d_267dc8b7",
      "revId": "3fbd1dca6a4d2dad332a2110d646e4ffef36d590",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "3fbd1dca6a4d2dad332a2110d646e4ffef36d590",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "3fbd1dca6a4d2dad332a2110d646e4ffef36d590",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3fbd1dca6a4d2dad332a2110d646e4ffef36d590",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3fbd1dca6a4d2dad332a2110d646e4ffef36d590",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "3fbd1dca6a4d2dad332a2110d646e4ffef36d590",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}