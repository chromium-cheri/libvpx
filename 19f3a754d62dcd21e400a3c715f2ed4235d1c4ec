{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "49548477_b7ae21df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-06-26T22:58:36Z",
      "side": 1,
      "message": "The vpx_hadamard_32x32_neon() function was added in https://chromium-review.googlesource.com/c/webm/libvpx/+/4004626.",
      "revId": "19f3a754d62dcd21e400a3c715f2ed4235d1c4ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18ce962e_2577ad25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-06-27T16:33:08Z",
      "side": 1,
      "message": "Hi Gerda: This is the libvpx version of https://aomedia-review.googlesource.com/c/aom/+/177323.\n\nIn libvpx, `tran_low_t` is defined as either `int32_t` or `int16_t` depending on the value of the compile-time option `CONFIG_VP9_HIGHBITDEPTH`, whereas in libaom `tran_low_t` is always defined as `int32_t`. In this CL I made the minimal change and only fixed the incorrect assumption that `a / 2 + b / 2 \u003d\u003d (a + b) / 2` and `a / 2 - b / 2 \u003d\u003d (a - b) / 2`.",
      "revId": "19f3a754d62dcd21e400a3c715f2ed4235d1c4ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f0b3473_12613fab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1573372
      },
      "writtenOn": "2023-06-28T11:25:33Z",
      "side": 1,
      "message": "Hi Wan-Teh,\nThanks for the fix! It seems that a similar issue exists in vp9_highbd_hadamard_32x32_neon().",
      "revId": "19f3a754d62dcd21e400a3c715f2ed4235d1c4ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65d5b3e3_fee5813f",
        "filename": "vpx_dsp/arm/hadamard_neon.c",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-06-27T16:38:17Z",
      "side": 1,
      "message": "For ease of comparison, here is the corresponding for loop in `vpx_hadamard_32x32_c()` (modified to use the same loop index variable `i`):\n\n```\n  // coeff: 16 bit, dynamic range [-32768, 32767] \n  for (i \u003d 0; i \u003c 256; ++i) {\n    tran_low_t a0 \u003d coeff[0];\n    tran_low_t a1 \u003d coeff[256];\n    tran_low_t a2 \u003d coeff[512];\n    tran_low_t a3 \u003d coeff[768];\n  \n    tran_low_t b0 \u003d (a0 + a1) \u003e\u003e 2;  // (a0 + a1): 17 bit, [-65536, 65535]\n    tran_low_t b1 \u003d (a0 - a1) \u003e\u003e 2;  // b0-b3: 15 bit, dynamic range\n    tran_low_t b2 \u003d (a2 + a3) \u003e\u003e 2;  // [-16384, 16383]\n    tran_low_t b3 \u003d (a2 - a3) \u003e\u003e 2;\n\n    coeff[0] \u003d b0 + b2;  // 16 bit, [-32768, 32767]\n    coeff[256] \u003d b1 + b3;\n    coeff[512] \u003d b0 - b2;\n    coeff[768] \u003d b1 - b3;\n  \n    ++coeff; \n  }\n```",
      "revId": "19f3a754d62dcd21e400a3c715f2ed4235d1c4ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "19f3a754d62dcd21e400a3c715f2ed4235d1c4ec",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "19f3a754d62dcd21e400a3c715f2ed4235d1c4ec",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "19f3a754d62dcd21e400a3c715f2ed4235d1c4ec",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "19f3a754d62dcd21e400a3c715f2ed4235d1c4ec",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "19f3a754d62dcd21e400a3c715f2ed4235d1c4ec",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}