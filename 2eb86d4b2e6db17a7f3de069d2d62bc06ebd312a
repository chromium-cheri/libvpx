{
  "comments": [
    {
      "key": {
        "uuid": "f85faa96_5f6b9980",
        "filename": "vpx_dsp/x86/avg_intrin_avx2.c",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2018-11-07T18:54:23Z",
      "side": 1,
      "message": "Why is the code expanding to 32 bits here? It looks like the hadamard is just adds/subs with 8/10/12 bit input. That should fit inside 16 bits and just the store at the end needs to be in 32 bits.",
      "range": {
        "startLine": 109,
        "startChar": 13,
        "endLine": 109,
        "endChar": 34
      },
      "revId": "2eb86d4b2e6db17a7f3de069d2d62bc06ebd312a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35f53578_a3f0178b",
        "filename": "vpx_dsp/x86/avg_intrin_avx2.c",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1001914
      },
      "writtenOn": "2018-11-07T19:01:48Z",
      "side": 1,
      "message": "12-bit input gets 13-bit difference as input.\n\nInside the 8x8 transform, each coefficient would effectively go through 3 adds/subs in 1-D operation. Hence 2-D operation would get 6 adds/subs, which would make the bit range towards 19 bits ?",
      "parentUuid": "f85faa96_5f6b9980",
      "range": {
        "startLine": 109,
        "startChar": 13,
        "endLine": 109,
        "endChar": 34
      },
      "revId": "2eb86d4b2e6db17a7f3de069d2d62bc06ebd312a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}