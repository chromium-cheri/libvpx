{
  "comments": [
    {
      "key": {
        "uuid": "09534428_469632b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-06-16T21:49:09Z",
      "side": 1,
      "message": "vp8/\u003cstruct\u003e: make frames_since_golden int; the rest belongs in the body.\n\nhttps://www.git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project\n\nThe last thing to keep in mind is the commit message. Getting in the habit of creating quality commit messages makes using and collaborating with Git a lot easier. As a general rule, your messages should start with a single line that’s no more than about 50 characters and that describes the changeset concisely, followed by a blank line, followed by a more detailed explanation. The Git project requires that the more detailed explanation include your motivation for the change and contrast its implementation with previous behavior – this is a good guideline to follow. It’s also a good idea to use the imperative present tense in these messages. In other words, use commands. Instead of “I added tests for” or “Adding tests for,” use “Add tests for.”",
      "revId": "ebc3d5398f0c94b888e746f2295503154fccd5ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}