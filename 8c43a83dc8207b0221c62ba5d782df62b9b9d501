{
  "comments": [
    {
      "key": {
        "uuid": "30407fd3_dfe4dba6",
        "filename": "vp9/common/vp9_idct.c",
        "patchSetId": 6
      },
      "lineNbr": 235,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-09-21T23:47:52Z",
      "side": 1,
      "message": "in thinking about it, certain configs will have asserts enabled. technically this should be used for impossible conditions, but given we\u0027re getting this far it really isn\u0027t",
      "revId": "8c43a83dc8207b0221c62ba5d782df62b9b9d501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "108ffb3e_0e742b2a",
        "filename": "vp9/common/vp9_idct.c",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2016-09-21T04:20:20Z",
      "side": 1,
      "message": "you should fill \u0027dest8\u0027 with something (0?) upon error, to avoid msan errors when in opt mode (that is: when the assert() is skipped).\nOtherwise you\u0027re just trading an ubsan error for an msan one.",
      "range": {
        "startLine": 236,
        "startChar": 4,
        "endLine": 236,
        "endChar": 10
      },
      "revId": "8c43a83dc8207b0221c62ba5d782df62b9b9d501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10b0dbbd_3c60fed5",
        "filename": "vp9/common/vp9_idct.c",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1132564
      },
      "writtenOn": "2016-09-21T16:20:26Z",
      "side": 1,
      "message": "I am not sure what is msan error.\n\nThe behavior of this function is that the dest contains prediction signal and this function will yield the residue signal and then add the residue signal on top of prediction signal in dest.\n\nReturn here means the residue signal will not be added.\n\nWill this incur msan error?",
      "parentUuid": "108ffb3e_0e742b2a",
      "range": {
        "startLine": 236,
        "startChar": 4,
        "endLine": 236,
        "endChar": 10
      },
      "revId": "8c43a83dc8207b0221c62ba5d782df62b9b9d501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0af0fac_018e4ee0",
        "filename": "vp9/common/vp9_idct.c",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-09-21T19:45:43Z",
      "side": 1,
      "message": "msan (-fsanitize\u003dmemory) is similar in some ways to valgrind, if you do something with uninitialized values you\u0027ll receive a warning.",
      "parentUuid": "10b0dbbd_3c60fed5",
      "range": {
        "startLine": 236,
        "startChar": 4,
        "endLine": 236,
        "endChar": 10
      },
      "revId": "8c43a83dc8207b0221c62ba5d782df62b9b9d501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0af0fac_04dbfc6f",
        "filename": "vp9/common/vp9_idct.c",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1132564
      },
      "writtenOn": "2016-09-21T21:40:10Z",
      "side": 1,
      "message": "Got it. In this case, there won\u0027t be msan because dest already contains prediction signal beforehand. In the other words, dest is initialized.",
      "parentUuid": "b0af0fac_018e4ee0",
      "range": {
        "startLine": 236,
        "startChar": 4,
        "endLine": 236,
        "endChar": 10
      },
      "revId": "8c43a83dc8207b0221c62ba5d782df62b9b9d501",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}