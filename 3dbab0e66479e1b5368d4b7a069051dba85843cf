{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c456cc24_a31c43ce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-11T01:24:35Z",
      "side": 1,
      "message": "commit 04d6253 is the parent commit of https://aomedia-review.googlesource.com/c/aom/+/188761.\n\nAll the commits to test/aom_image_test.cc were written by Google employees. So I (as a Google employee) can copy it to libvpx under the libvpx license.",
      "revId": "3dbab0e66479e1b5368d4b7a069051dba85843cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a2c26da_2ee92752",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-11T01:21:00Z",
      "side": 1,
      "message": "James: I am preparing for porting https://aomedia-review.googlesource.com/c/aom/+/188761 to libvpx.",
      "revId": "3dbab0e66479e1b5368d4b7a069051dba85843cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7886e48_870490d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-11T01:26:45Z",
      "side": 1,
      "message": "The diffs between the three patchsets show how I transformed aom_image_test.cc to vpx_image_test.cc.",
      "revId": "3dbab0e66479e1b5368d4b7a069051dba85843cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c072b222_fdd06d1e",
        "filename": "test/test.mk",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-11T01:26:45Z",
      "side": 1,
      "message": "I added vpx_image_test.cc here because the test uses only the public API.",
      "revId": "3dbab0e66479e1b5368d4b7a069051dba85843cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1db3282f_0ef10066",
        "filename": "test/vpx_image_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-11T01:21:00Z",
      "side": 1,
      "message": "Lines 22-23 were originally:\n\n```\n  img.img_data \u003d (unsigned char *)\"\";\n```\n\nBut it caused a compiler warning:\n\n```\n../libvpx/test/vpx_image_test.cc: In member function ‘virtual void VpxImageTest_VpxImgWrapInvalidAlign_Test::TestBody()’:\n../libvpx/test/vpx_image_test.cc:22:18: warning: cast from type ‘const char*’ to type ‘unsigned char*’ casts away qualifiers [-Wcast-qual]\n   22 |   img.img_data \u003d (unsigned char *)\"\";\n      |                  ^~~~~~~~~~~~~~~~~~~\n```",
      "revId": "3dbab0e66479e1b5368d4b7a069051dba85843cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0659c4f_2a0f6d3f",
        "filename": "test/vpx_image_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-04-11T02:01:54Z",
      "side": 1,
      "message": "\u003e Lines 22-23 were originally:\n\u003e \n\u003e ```\n\u003e   img.img_data \u003d (unsigned char *)\"\";\n\u003e ```\n\u003e \n\u003e But it caused a compiler warning:\n\u003e \n\u003e ```\n\u003e ../libvpx/test/vpx_image_test.cc: In member function ‘virtual void VpxImageTest_VpxImgWrapInvalidAlign_Test::TestBody()’:\n\u003e ../libvpx/test/vpx_image_test.cc:22:18: warning: cast from type ‘const char*’ to type ‘unsigned char*’ casts away qualifiers [-Wcast-qual]\n\u003e    22 |   img.img_data \u003d (unsigned char *)\"\";\n\u003e       |                  ^~~~~~~~~~~~~~~~~~~\n\u003e ```\n\n`const_cast` might have worked, but this is OK.",
      "parentUuid": "1db3282f_0ef10066",
      "revId": "3dbab0e66479e1b5368d4b7a069051dba85843cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4059e298_f2b06383",
        "filename": "test/vpx_image_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-11T02:13:53Z",
      "side": 1,
      "message": "Ah, you\u0027re right. I forgot this is C++ code, so we have `const_cast` available.\n\nBut it also requires a `reinterpret_cast`.\n\n```\n   img.img_data \u003d reinterpret_cast\u003cunsigned char *\u003e(const_cast\u003cchar *\u003e(\"\"));\n```",
      "parentUuid": "e0659c4f_2a0f6d3f",
      "revId": "3dbab0e66479e1b5368d4b7a069051dba85843cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e98d6554_e99bf5aa",
        "filename": "test/vpx_image_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-11T01:21:00Z",
      "side": 1,
      "message": "Lines 69-70 were originally:\n\n```\n  EXPECT_EQ(img.stride[AOM_PLANE_V], 0);\n  EXPECT_EQ(img.planes[AOM_PLANE_V], nullptr);\n```\n\nThese two lines have been adjusted to match how NV12 is represented in libvpx.",
      "revId": "3dbab0e66479e1b5368d4b7a069051dba85843cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad52b8c2_df8af92c",
        "filename": "test/vpx_image_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-04-11T02:01:54Z",
      "side": 1,
      "message": "\u003e Lines 69-70 were originally:\n\u003e \n\u003e ```\n\u003e   EXPECT_EQ(img.stride[AOM_PLANE_V], 0);\n\u003e   EXPECT_EQ(img.planes[AOM_PLANE_V], nullptr);\n\u003e ```\n\u003e \n\u003e These two lines have been adjusted to match how NV12 is represented in libvpx.\n\nI wonder why they\u0027re different.",
      "parentUuid": "e98d6554_e99bf5aa",
      "revId": "3dbab0e66479e1b5368d4b7a069051dba85843cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4cdb45f_b023dade",
        "filename": "test/vpx_image_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-11T02:13:53Z",
      "side": 1,
      "message": "When Jerome ported the libvpx NV12 code to libaom, I changed the libaom code to be more similar to how NV12 is represented in Chrome and WebRTC (two planes: Y and UV). We never ported the new representation back to libvpx.",
      "parentUuid": "ad52b8c2_df8af92c",
      "revId": "3dbab0e66479e1b5368d4b7a069051dba85843cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}