{
  "comments": [
    {
      "key": {
        "uuid": "72a2e4c0_f42d60f0",
        "filename": "test/external_frame_buffer_test.cc",
        "patchSetId": 11
      },
      "lineNbr": 183,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-05-09T22:50:03Z",
      "side": 1,
      "message": "Shouldn\u0027t this always be true?",
      "range": {
        "startLine": 183,
        "startChar": 10,
        "endLine": 183,
        "endChar": 37
      },
      "revId": "4af561eeef087dd0d82221258b2f1964fd0e342e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2e0dc3d_a28e3e3e",
        "filename": "test/external_frame_buffer_test.cc",
        "patchSetId": 11
      },
      "lineNbr": 183,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-05-10T17:48:49Z",
      "side": 1,
      "message": "It\u0027s false only for the SetAfterDecode test.\nInvestigating a little bit further, I\u0027m confused by this test.\nIf SetFrameBufferFunctions has not been called before CheckXImageFrameBuffer, what does img-\u003efb_priv points to? InternalFrameBuffer?\nIf that\u0027s the case, the test used to work just because the memory layout of InternalFrameBuffer is the same as ExternalFrameBuffer.\nAm I missing something? Was that intended to work that way?",
      "parentUuid": "72a2e4c0_f42d60f0",
      "range": {
        "startLine": 183,
        "startChar": 10,
        "endLine": 183,
        "endChar": 37
      },
      "revId": "4af561eeef087dd0d82221258b2f1964fd0e342e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d242b02f_c0398c93",
        "filename": "test/external_frame_buffer_test.cc",
        "patchSetId": 11
      },
      "lineNbr": 183,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-05-12T18:57:57Z",
      "side": 1,
      "message": "Yeah it looks like it points to InternalFrameBuffer. OK this should be fine.",
      "parentUuid": "b2e0dc3d_a28e3e3e",
      "range": {
        "startLine": 183,
        "startChar": 10,
        "endLine": 183,
        "endChar": 37
      },
      "revId": "4af561eeef087dd0d82221258b2f1964fd0e342e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d76b822f_635dc20e",
        "filename": "test/external_frame_buffer_test.cc",
        "patchSetId": 11
      },
      "lineNbr": 183,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-05-18T20:21:25Z",
      "side": 1,
      "message": "I\u0027m not sure it\u0027s fine, the InternalFrameBuffer doesn\u0027t have plane and stride fields.\n\nIn the latest patch I added a bool that avoid these checks, and avoid casting ext_fb to ExternalFrameBuffer if no external functions have been set. Does that work for you?",
      "parentUuid": "d242b02f_c0398c93",
      "range": {
        "startLine": 183,
        "startChar": 10,
        "endLine": 183,
        "endChar": 37
      },
      "revId": "4af561eeef087dd0d82221258b2f1964fd0e342e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72a2e4c0_54476cae",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 11
      },
      "lineNbr": 87,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-05-09T22:50:03Z",
      "side": 1,
      "message": "Is this true for VPX_CODEC_FRAME_BUFFER_PLANES? We don\u0027t make this restriction on VPX_CODEC_FRAME_BUFFER_SIZE as it has shown to cause a good percentage perf loss.",
      "range": {
        "startLine": 87,
        "startChar": 3,
        "endLine": 87,
        "endChar": 55
      },
      "revId": "4af561eeef087dd0d82221258b2f1964fd0e342e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72a2e4c0_3ae61156",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 11
      },
      "lineNbr": 87,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-05-10T17:48:49Z",
      "side": 1,
      "message": "The previous documentation was saying: \"The callback must zero out all the data allocated\", doesn\u0027t that mean that the restriction was there before?",
      "parentUuid": "72a2e4c0_54476cae",
      "range": {
        "startLine": 87,
        "startChar": 3,
        "endLine": 87,
        "endChar": 55
      },
      "revId": "4af561eeef087dd0d82221258b2f1964fd0e342e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2e0dc3d_c52d4c3a",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 11
      },
      "lineNbr": 87,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-05-12T18:57:57Z",
      "side": 1,
      "message": "Ahh yeah OK.",
      "parentUuid": "72a2e4c0_3ae61156",
      "range": {
        "startLine": 87,
        "startChar": 3,
        "endLine": 87,
        "endChar": 55
      },
      "revId": "4af561eeef087dd0d82221258b2f1964fd0e342e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72a2e4c0_69461d15",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 11
      },
      "lineNbr": 202,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-05-09T22:50:03Z",
      "side": 1,
      "message": "nit: alignment",
      "range": {
        "startLine": 202,
        "startChar": 6,
        "endLine": 202,
        "endChar": 74
      },
      "revId": "4af561eeef087dd0d82221258b2f1964fd0e342e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72a2e4c0_fad6695c",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 11
      },
      "lineNbr": 202,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-05-10T17:48:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72a2e4c0_69461d15",
      "range": {
        "startLine": 202,
        "startChar": 6,
        "endLine": 202,
        "endChar": 74
      },
      "revId": "4af561eeef087dd0d82221258b2f1964fd0e342e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}