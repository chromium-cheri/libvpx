{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_68c4175e",
        "filename": "vpx/src/vpx_decoder.c",
        "patchSetId": 4
      },
      "lineNbr": 200,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "nit: alignment",
      "range": {
        "startLine": 200,
        "startChar": 6,
        "endLine": 200,
        "endChar": 21
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_7d2bf7db",
        "filename": "vpx/src/vpx_decoder.c",
        "patchSetId": 4
      },
      "lineNbr": 200,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Is there something to automatically format the code?\nThis function is gone now.",
      "parentUuid": "c8e03c3f_68c4175e",
      "range": {
        "startLine": 200,
        "startChar": 6,
        "endLine": 200,
        "endChar": 21
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_48d67310",
        "filename": "vpx/vpx_decoder.h",
        "patchSetId": 4
      },
      "lineNbr": 381,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "nit:lets",
      "range": {
        "startLine": 381,
        "startChar": 27,
        "endLine": 381,
        "endChar": 30
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_5d303b46",
        "filename": "vpx/vpx_decoder.h",
        "patchSetId": 4
      },
      "lineNbr": 381,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "This is gone now.",
      "parentUuid": "c8e03c3f_48d67310",
      "range": {
        "startLine": 381,
        "startChar": 27,
        "endLine": 381,
        "endChar": 30
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_68dd3726",
        "filename": "vpx/vpx_decoder.h",
        "patchSetId": 4
      },
      "lineNbr": 382,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "client",
      "range": {
        "startLine": 382,
        "startChar": 27,
        "endLine": 382,
        "endChar": 32
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_3d356f36",
        "filename": "vpx/vpx_decoder.h",
        "patchSetId": 4
      },
      "lineNbr": 382,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Gone.",
      "parentUuid": "c8e03c3f_68dd3726",
      "range": {
        "startLine": 382,
        "startChar": 27,
        "endLine": 382,
        "endChar": 32
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_48ff9376",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "nit: Capitalize",
      "range": {
        "startLine": 39,
        "startChar": 3,
        "endLine": 39,
        "endChar": 7
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_a80f3f86",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "contiguous",
      "range": {
        "startLine": 39,
        "startChar": 40,
        "endLine": 39,
        "endChar": 49
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_3de7aff6",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Ack. This comment is gone now.",
      "parentUuid": "c8e03c3f_a80f3f86",
      "range": {
        "startLine": 39,
        "startChar": 40,
        "endLine": 39,
        "endChar": 49
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_08310be5",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "What about adding a type field to this struct? The two values could be SIZE or PLANES. If SIZE then the external frame buffer would use data and size, otherwise plane and stride. Then you could also add the width, height, and format to this struct as well to be filled out by libvpx if type \u003d\u003d PLANES.\n\nIf you do it this way, we do not need to add more callback function types and it should be backwards compatible as the old code would not know about the new fields and always set data and size (though the old way would be marked as deprecated.)\n\nI\u0027m not sure which way I think it is best to go, though I\u0027m leaning to the type field. Just want to get some opinions.",
      "range": {
        "startLine": 42,
        "startChar": 15,
        "endLine": 42,
        "endChar": 37
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_57c9ee96",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-04-21T02:57:41Z",
      "side": 1,
      "message": "this approach sounds like it might be simpler",
      "parentUuid": "c8e03c3f_08310be5",
      "range": {
        "startLine": 42,
        "startChar": 15,
        "endLine": 42,
        "endChar": 37
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8f8a0fc_5e43d1ee",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Definitely simpler: chromium-review.googlesource.com/340550\n\nI don\u0027t understand what you mean with \"[..] could also add the width, height, and format to this struct as well to be filled out by libvpx if type \u003d\u003d PLANES.\"\n\nAs I understood it the callback would set the allocation type, so the size and format would always be passed to the callback.\nDid you mean that we should set the type of allocation in libvpx when it\u0027s initialized?\n\nThe only thing I don\u0027t particularly like is that now this struct is used both for input and output.",
      "parentUuid": "c8e03c3f_57c9ee96",
      "range": {
        "startLine": 42,
        "startChar": 15,
        "endLine": 42,
        "endChar": 37
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_c833a346",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "Make this some kind of define, like VP9_MAXIMUM_EXTERNAL_PLANES or something.",
      "range": {
        "startLine": 46,
        "startChar": 17,
        "endLine": 46,
        "endChar": 18
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_1decf3d6",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8e03c3f_c833a346",
      "range": {
        "startLine": 46,
        "startChar": 17,
        "endLine": 46,
        "endChar": 18
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_482b1375",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "If we currently only ever use 3 planes should we just make this value 3?",
      "range": {
        "startLine": 47,
        "startChar": 13,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_fdd02709",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8e03c3f_482b1375",
      "range": {
        "startLine": 47,
        "startChar": 13,
        "endLine": 47,
        "endChar": 14
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_e8ff8745",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "must allocate?",
      "range": {
        "startLine": 89,
        "startChar": 58,
        "endLine": 89,
        "endChar": 62
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_ddcd6b6f",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "This is gone.",
      "parentUuid": "c8e03c3f_e8ff8745",
      "range": {
        "startLine": 89,
        "startChar": 58,
        "endLine": 89,
        "endChar": 62
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_28120f7b",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "You should mention that fb-\u003eplane must be aligned to a multiple of 32 bytes.",
      "range": {
        "startLine": 93,
        "startChar": 36,
        "endLine": 93,
        "endChar": 38
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_bdda9f25",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 93,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8e03c3f_28120f7b",
      "range": {
        "startLine": 93,
        "startChar": 36,
        "endLine": 93,
        "endChar": 38
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_2845ef93",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "Seems like there was more to the comment.",
      "range": {
        "startLine": 118,
        "startChar": 65,
        "endLine": 118,
        "endChar": 66
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_7d04176e",
        "filename": "vpx/vpx_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "There was, but I pushed the wrong version. :/\nThis is gone now.",
      "parentUuid": "c8e03c3f_2845ef93",
      "range": {
        "startLine": 118,
        "startChar": 65,
        "endLine": 118,
        "endChar": 66
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_28604f07",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "You are going to have to move this block of code down after all the variable initializations in this scope because it is a C file.",
      "range": {
        "startLine": 155,
        "startChar": 4,
        "endLine": 155,
        "endChar": 20
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_a821ffe9",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "planes_cb !\u003d NULL for consistency",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_9d45a3a5",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8e03c3f_a821ffe9",
      "range": {
        "startLine": 155,
        "startChar": 8,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_1d3ab326",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8e03c3f_28604f07",
      "range": {
        "startLine": 155,
        "startChar": 4,
        "endLine": 155,
        "endChar": 20
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_489e732f",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "alignment is off",
      "range": {
        "startLine": 175,
        "startChar": 10,
        "endLine": 175,
        "endChar": 24
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_7d12d7a5",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "c8e03c3f_489e732f",
      "range": {
        "startLine": 175,
        "startChar": 10,
        "endLine": 175,
        "endChar": 24
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_c8856302",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "pointer checks should be against NULL for consistency.",
      "range": {
        "startLine": 178,
        "startChar": 16,
        "endLine": 178,
        "endChar": 21
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_5d171b94",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8e03c3f_c8856302",
      "range": {
        "startLine": 178,
        "startChar": 16,
        "endLine": 178,
        "endChar": 21
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e03c3f_08b46bab",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2016-04-20T17:46:29Z",
      "side": 1,
      "message": "I think you can refactor this code with a lot of the code below.",
      "range": {
        "startLine": 197,
        "startChar": 26,
        "endLine": 197,
        "endChar": 31
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f7b548_3d0c4f84",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 1123405
      },
      "writtenOn": "2016-04-25T19:01:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8e03c3f_08b46bab",
      "range": {
        "startLine": 197,
        "startChar": 26,
        "endLine": 197,
        "endChar": 31
      },
      "revId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "36e9a928fddfb9973fad084d40af22b974b02fd5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}