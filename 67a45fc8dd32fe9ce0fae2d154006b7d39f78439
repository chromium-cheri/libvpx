{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0aac1d6c_d8c93154",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-10-03T18:38:51Z",
      "side": 1,
      "message": "Jingning: Please see the nightly valgrind test failure:\nhttps://build.webmproject.org/jenkins/job/libvpx__unit_tests-valgrind/1941/",
      "revId": "67a45fc8dd32fe9ce0fae2d154006b7d39f78439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b392f4d_defa8979",
        "filename": "vp9/encoder/vp9_encoder.c",
        "patchSetId": 9
      },
      "lineNbr": 4666,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-10-03T20:04:07Z",
      "side": 1,
      "message": "Note the position  of the `int64_t` cast here. This is related to my comment on the Coverity defect.",
      "revId": "67a45fc8dd32fe9ce0fae2d154006b7d39f78439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c294710d_15178722",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 9
      },
      "lineNbr": 806,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-10-03T20:04:07Z",
      "side": 1,
      "message": "Please store the array size in a new field, or document what the array size is.\n\nBased on the code in\n\n```\nstatic void init_sb_mul_scale_buffer(VP9_COMP *cpi) {\n  VP9_COMMON *cm \u003d \u0026cpi-\u003ecommon;\n\n  if (cpi-\u003emb_wiener_var_rows \u003e\u003d cm-\u003emb_rows \u0026\u0026\n      cpi-\u003emb_wiener_var_cols \u003e\u003d cm-\u003emb_cols)\n    return;\n\n  vpx_free(cpi-\u003esb_mul_scale);\n  cpi-\u003esb_mul_scale \u003d NULL;\n\n  CHECK_MEM_ERROR(\n      \u0026cm-\u003eerror, cpi-\u003esb_mul_scale,\n      vpx_calloc(cm-\u003emb_rows * cm-\u003emb_cols, sizeof(*cpi-\u003esb_mul_scale)));\n  cpi-\u003emb_wiener_var_rows \u003d cm-\u003emb_rows;\n  cpi-\u003emb_wiener_var_cols \u003d cm-\u003emb_cols;\n}\n```\n\nit seems that the array size is `mb_wiener_var_rows * mb_wiener_var_cols`. So we just need to document that.",
      "revId": "67a45fc8dd32fe9ce0fae2d154006b7d39f78439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "637045b8_6a374082",
        "filename": "vp9/encoder/vp9_tpl_model.c",
        "patchSetId": 9
      },
      "lineNbr": 1764,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-10-03T20:04:07Z",
      "side": 1,
      "message": "There is a Coverity defect in line 1763:\n\n```\n\u003e\u003e\u003e     CID 1600060:  Integer handling issues  (OVERFLOW_BEFORE_WIDEN)\n\u003e\u003e\u003e     Potentially overflowing expression \"encode_frame_decision.sb_params_list[i].rdmult * 256\" with type \"int\" (32 bits, signed) is evaluated using 32-bit arithmetic, and then used in a context that expects an expression of type \"int64_t\" (64 bits, signed).\n```\n\nI think we should move the `int64_t` cast inside the parentheses. See vp9/encoder/vp9_encoder.c:4666.",
      "revId": "67a45fc8dd32fe9ce0fae2d154006b7d39f78439",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "67a45fc8dd32fe9ce0fae2d154006b7d39f78439",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "67a45fc8dd32fe9ce0fae2d154006b7d39f78439",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "67a45fc8dd32fe9ce0fae2d154006b7d39f78439",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "67a45fc8dd32fe9ce0fae2d154006b7d39f78439",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}