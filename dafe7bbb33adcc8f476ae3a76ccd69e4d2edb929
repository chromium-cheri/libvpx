{
  "comments": [
    {
      "key": {
        "uuid": "AAAAKn//gtQ\u003d",
        "filename": "test/encode_test_driver.cc",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "should be first.\n\nhttp://google-styleguide.googlecode.com/svn/trunk/cppguide.xml#Names_and_Order_of_Includes\n\nnote the others are out of order too (considering gtest is third_party).",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAKn//gs8\u003d",
        "filename": "test/encode_test_driver.cc",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "I think one blank line is enough (to match keyframe_test.cc)",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAKn//gs4\u003d",
        "filename": "test/encode_test_driver.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "const\u0026 would be slightly more correct",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAKn//gtA\u003d",
        "filename": "test/encode_test_driver.cc",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "test/encode_test_driver.cc:100:  Blank line at the start of a code block.  Is this needed?  [whitespace/blank_line] [2]",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAKn//gtI\u003d",
        "filename": "test/encode_test_driver.h",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "all this could be namespaced\n\nhttp://google-styleguide.googlecode.com/svn/trunk/cppguide.xml#Namespaces\n\nmaybe namespace libvpx_test?",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAKn//gs0\u003d",
        "filename": "test/encode_test_driver.h",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "should be a pointer if non-const",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAKn//gsw\u003d",
        "filename": "test/encode_test_driver.h",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "cast to void* shouldn\u0027t be necessary, also \u0026buffer_[0] would remove the const_cast.",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAKn//gss\u003d",
        "filename": "test/encode_test_driver.h",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "forward declarations usually come earlier (outside of a namespace) after includes, e.g.,",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAKn//gsc\u003d",
        "filename": "test/encode_test_driver.h",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "needs a virtual destructor",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAKn//gsk\u003d",
        "filename": "test/encode_test_driver.h",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "could be 1 line",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAKn//gsg\u003d",
        "filename": "test/encode_test_driver.h",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2012-05-19T01:58:45Z",
      "side": 1,
      "message": "weird indent. normally 4 spaces on continued params (non-aligned with \u0027(\u0027. could also break at the \u003d and indent 4.",
      "revId": "dafe7bbb33adcc8f476ae3a76ccd69e4d2edb929",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}