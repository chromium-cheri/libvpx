{
  "comments": [
    {
      "key": {
        "uuid": "AAAAVH//uEU\u003d",
        "filename": "vp9/common/vp9_reconintra4x4.c",
        "patchSetId": 2
      },
      "lineNbr": 461,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2013-01-31T12:49:45Z",
      "side": 1,
      "message": "non-capitalized variable names\n\n -\u003e uint8_t* above \u003d ...\n     uint8_t left[4];",
      "revId": "07078d581e6428661d834e701c0b7fb905b7f7be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVH//uEM\u003d",
        "filename": "vp9/common/vp9_reconintra4x4.c",
        "patchSetId": 2
      },
      "lineNbr": 464,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2013-01-31T12:49:45Z",
      "side": 1,
      "message": "a comment about the origin of these coeffs would be nice.\n\nIn particular, it seems to me they are not normalized (cv[i] + ch[i] + cd[i] !\u003d 1.0). Any reason for that?\nAnd why are the last entries equal to \u00270\u0027?\n\nGoing further, these coeffs should be ideally configurable at frame level (or even, super-block level!)",
      "revId": "07078d581e6428661d834e701c0b7fb905b7f7be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVH//uEQ\u003d",
        "filename": "vp9/common/vp9_reconintra4x4.c",
        "patchSetId": 2
      },
      "lineNbr": 465,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2013-01-31T12:49:45Z",
      "side": 1,
      "message": "const double ...",
      "revId": "07078d581e6428661d834e701c0b7fb905b7f7be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVH//uEI\u003d",
        "filename": "vp9/common/vp9_reconintra4x4.c",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2013-01-31T12:49:45Z",
      "side": 1,
      "message": "no space after \u0027(\u0027",
      "revId": "07078d581e6428661d834e701c0b7fb905b7f7be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVH//uEE\u003d",
        "filename": "vp9/common/vp9_reconintra4x4.c",
        "patchSetId": 2
      },
      "lineNbr": 518,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2013-01-31T12:49:45Z",
      "side": 1,
      "message": "space around \u0027-\u0027",
      "revId": "07078d581e6428661d834e701c0b7fb905b7f7be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVH//uEA\u003d",
        "filename": "vp9/common/vp9_reconintra4x4.c",
        "patchSetId": 2
      },
      "lineNbr": 529,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2013-01-31T12:49:45Z",
      "side": 1,
      "message": "that\u0027s a lot of float comparisons.\nCould be just:\n\n{\n  const int value \u003d lrint(predictor5[r+1][c+1] + mean);\n  predictor[c] \u003d (value \u003c 0) ? 0 : (value \u003e 255) ? 255u : (uint8_t)value;\n}\n\n\n(or any clip255() function if available)",
      "revId": "07078d581e6428661d834e701c0b7fb905b7f7be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVH//uD8\u003d",
        "filename": "vp9/common/vp9_reconintra4x4.c",
        "patchSetId": 2
      },
      "lineNbr": 547,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2013-01-31T12:49:45Z",
      "side": 1,
      "message": "don\u0027t we have some clip255() function (or equivalent) now?",
      "revId": "07078d581e6428661d834e701c0b7fb905b7f7be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVH//uD4\u003d",
        "filename": "vp9/common/vp9_reconintra4x4.c",
        "patchSetId": 2
      },
      "lineNbr": 559,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2013-01-31T12:49:45Z",
      "side": 1,
      "message": "this looks like a massive copy-paste of the code above.\n\nPlease factorize!",
      "revId": "07078d581e6428661d834e701c0b7fb905b7f7be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}