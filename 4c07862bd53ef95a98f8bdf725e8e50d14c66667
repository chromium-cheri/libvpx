{
  "comments": [
    {
      "key": {
        "uuid": "2fe484c3_6722e2a7",
        "filename": "vp8/decoder/decodeframe.c",
        "patchSetId": 17
      },
      "lineNbr": 1225,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2018-10-31T05:42:15Z",
      "side": 1,
      "message": "\u0027Corrupt\u0027 would match the one other instance of this string. Other options would be to leave it NULL as the description matches the name, we could use vpx_codec_err_to_string() to retrieve it in the tools, or add something more specific about this particular decode failure.",
      "range": {
        "startLine": 1225,
        "startChar": 26,
        "endLine": 1225,
        "endChar": 35
      },
      "revId": "4c07862bd53ef95a98f8bdf725e8e50d14c66667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b65e953d_2a08f733",
        "filename": "vp8/decoder/decodeframe.c",
        "patchSetId": 17
      },
      "lineNbr": 1225,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2018-10-31T07:22:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2fe484c3_6722e2a7",
      "range": {
        "startLine": 1225,
        "startChar": 26,
        "endLine": 1225,
        "endChar": 35
      },
      "revId": "4c07862bd53ef95a98f8bdf725e8e50d14c66667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4c1dc9f_baa41c06",
        "filename": "vp8/decoder/onyxd_if.c",
        "patchSetId": 17
      },
      "lineNbr": 351,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2018-10-31T05:42:15Z",
      "side": 1,
      "message": "this could be sizeof(detail)",
      "range": {
        "startLine": 351,
        "startChar": 66,
        "endLine": 351,
        "endChar": 68
      },
      "revId": "4c07862bd53ef95a98f8bdf725e8e50d14c66667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cbb92b4_66534363",
        "filename": "vp8/decoder/onyxd_if.c",
        "patchSetId": 17
      },
      "lineNbr": 351,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2018-10-31T07:22:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4c1dc9f_baa41c06",
      "range": {
        "startLine": 351,
        "startChar": 66,
        "endLine": 351,
        "endChar": 68
      },
      "revId": "4c07862bd53ef95a98f8bdf725e8e50d14c66667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "993821e3_7d236154",
        "filename": "vp8/decoder/threading.c",
        "patchSetId": 17
      },
      "lineNbr": 596,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2018-10-31T05:42:15Z",
      "side": 1,
      "message": "you could immediately break out of the loop here, no?",
      "revId": "4c07862bd53ef95a98f8bdf725e8e50d14c66667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a06dd00_45280ec6",
        "filename": "vp8/decoder/threading.c",
        "patchSetId": 17
      },
      "lineNbr": 596,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2018-10-31T07:22:11Z",
      "side": 1,
      "message": "I think the idea of while(1) here is that the thread keeps waiting for h_event_start_decoding available (which is set by main thread at the beginning of every frame) to start decode current frame. \n\nSo if it breaks out here, the thread can\u0027t start decoding next frame even the main thread already starts. Then the main thread would keep waiting for this thread.",
      "parentUuid": "993821e3_7d236154",
      "revId": "4c07862bd53ef95a98f8bdf725e8e50d14c66667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a28ab23_0c5ae2d5",
        "filename": "vp8/decoder/threading.c",
        "patchSetId": 17
      },
      "lineNbr": 596,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2018-10-31T17:31:46Z",
      "side": 1,
      "message": "\u003e I think the idea of while(1) here is that the thread keeps waiting for h_event_start_decoding available (which is set by main thread at the beginning of every frame) to start decode current frame. \n\u003e \n\u003e So if it breaks out here, the thread can\u0027t start decoding next frame even the main thread already starts. Then the main thread would keep waiting for this thread.\n\ngood point. this is structured a little differently than vp9, if we want to try to recover then this thread needs to stay active.",
      "parentUuid": "0a06dd00_45280ec6",
      "revId": "4c07862bd53ef95a98f8bdf725e8e50d14c66667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04d5fa5f_cb22bc60",
        "filename": "vp8/decoder/threading.c",
        "patchSetId": 17
      },
      "lineNbr": 839,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2018-10-31T05:42:15Z",
      "side": 1,
      "message": "you may want to set this closer to (after) the setjmp() call",
      "revId": "4c07862bd53ef95a98f8bdf725e8e50d14c66667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef8068f3_1aef11a2",
        "filename": "vp8/decoder/threading.c",
        "patchSetId": 17
      },
      "lineNbr": 839,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2018-10-31T07:22:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04d5fa5f_cb22bc60",
      "revId": "4c07862bd53ef95a98f8bdf725e8e50d14c66667",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}