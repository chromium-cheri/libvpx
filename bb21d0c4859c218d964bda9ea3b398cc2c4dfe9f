{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cc235f15_f1a5b47a",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-03-16T22:10:49Z",
      "side": 1,
      "message": "James: I think it is not necessary to reset `rc_api` before returning `nullptr`. Do you agree?",
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66ff5c4f_2f99f1b9",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2023-03-17T00:32:13Z",
      "side": 1,
      "message": "\u003e James: I think it is not necessary to reset `rc_api` before returning `nullptr`. Do you agree?\n\nI agree.",
      "parentUuid": "cc235f15_f1a5b47a",
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fef98c04_384ae9e4",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-03-17T02:01:27Z",
      "side": 1,
      "message": "Thanks. Removed the `rc_api.reset()` calls.",
      "parentUuid": "66ff5c4f_2f99f1b9",
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "464b6a5e_45efd678",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2023-03-16T22:33:31Z",
      "side": 1,
      "message": "second thought: maybe it\u0027s better to return a ```vpx_codec_err_t``` and specify the error code? like ```VPX_CODEC_INVALID_PARAMS```\n\nSame for libaom, ```aom_codec_err_t```",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 4
      },
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1e66d2d_2934b7f0",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-03-16T22:49:49Z",
      "side": 1,
      "message": "Thank you for the suggestion. I also considered this when I wrote the libaom CL. In the end I used `bool` simply because I was lazy. Now that I have seen the code that uses these RTC rate control classes, I think it is more convenient for their `UpdateRateControl()` methods to return the same type. Here is the code that uses the rate control classes. Note that it is a template:\n\n```\ntemplate \u003ctypename RateControlConfigType,\n          typename RateCtrlType,\n          typename FrameParamsType\u003e\nclass VideoRateControlWrapperInternal : public VideoRateControlWrapper {\n public:\n  ...\n  void UpdateRateControl(const RateControlConfig\u0026 config) override {\n    DCHECK(impl_);\n    impl_-\u003eUpdateRateControl(ConvertControlConfig(config));\n  }\n  ...\n private:\n  ...\n\n  std::unique_ptr\u003cRateCtrlType\u003e impl_;\n};\n```\n\nWhen this code is ready to check the return value of `impl_-\u003eUpdateRateControl()`, if `VP9RateControlRTC::UpdateRateControl()` returns `vpx_codec_err_t` and `AV1RateControlRTC::UpdateRateControl()` returns `aom_codec_err_t`, it will be harder for this template class to check the return value in a uniform way. I think it is still possible, because there is a precedence to handle the different input parameters of the `PostEncodeUpdate()` methods. But extra work will be needed.",
      "parentUuid": "464b6a5e_45efd678",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 4
      },
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ce35cd4_c8c584b4",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-03-16T22:57:59Z",
      "side": 1,
      "message": "Jerome: Since you and Marco are the owners of these rate control classes, I will do what you think is right. Just let me know your preference. Thanks.",
      "parentUuid": "f1e66d2d_2934b7f0",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 4
      },
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b644d2c4_87424e30",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2023-03-17T13:10:22Z",
      "side": 1,
      "message": "Thanks for clarifying that. Given it\u0027s a template which already has three parameters, I think it\u0027s doable by adding another one?\n\n@hiroh@chromium.org what\u0027s your take on this? since you implemented the template.",
      "parentUuid": "9ce35cd4_c8c584b4",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 4
      },
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2102a3a7_cac5195e",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-03-17T21:11:14Z",
      "side": 1,
      "message": "I analyzed the `VideoRateControlWrapperInternal` template class in Chrome\u0027s media/gpu/windows/video_rate_control_wrapper.h. We don\u0027t need to add a template parameter. We just need to remove the implementation of the `UpdateRateControl()` method from the template class. I.e., change it from:\n\n```\n  void UpdateRateControl(const RateControlConfig\u0026 config) override {\n    DCHECK(impl_);\n    impl_-\u003eUpdateRateControl(ConvertControlConfig(config));\n  }\n```\n\nto:\n\n```\n  void UpdateRateControl(const RateControlConfig\u0026 config) override;\n```\n\nThen each instantiation of the template needs to specialize the `UpdateRateControl()` method.\n\nHirokazu: could you look into how `VideoRateControlWrapperInternal::UpdateRateControl()` should report failure? That will help us decide whether the libaom and libvpx rate control classes need to report the reason for failure (i.e., an error code) or just a success/failure boolean. Thanks.",
      "parentUuid": "b644d2c4_87424e30",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 4
      },
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9064249_686c5e93",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-03-17T21:48:02Z",
      "side": 1,
      "message": "I just realized that the `Create()` factory method also doesn\u0027t report the reason for failure. I now recommend `UpdateRateControl()` return `bool`,",
      "parentUuid": "2102a3a7_cac5195e",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 4
      },
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "912f8756_1482c1cb",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1196199
      },
      "writtenOn": "2023-03-18T02:02:26Z",
      "side": 1,
      "message": "I think adding one more template paramter can make it. \nHow are type types useful over bool?",
      "parentUuid": "c9064249_686c5e93",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 4
      },
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06ec6e81_4895c993",
        "filename": "vp9/ratectrl_rtc.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-03-18T02:25:09Z",
      "side": 1,
      "message": "If UpdateRateControl() returns bool, it can only report success (true) or failure (false).\n\nIf UpdateRateControl() returns vpx_codec_err_t (an error code), then it can report not only success (VPX_CODEC_OK) or failure (any other error code), but also the reason for failure, such as VPX_CODEC_MEM_ERROR (out of memory) or VPX_CODEC_INVALID_PARAM (invalid parameters).\n\nSince the Create() factory method doesn\u0027t report the reason for failure, I think returning bool is good enough.",
      "parentUuid": "912f8756_1482c1cb",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 4
      },
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "645304b9_1fedfe52",
        "filename": "vp9/ratectrl_rtc.h",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2023-03-16T22:49:49Z",
      "side": 1,
      "message": "The `ss_number_layers` initialization was inadvertently deleted in commit 65a1751e5b98bf7f1d21bcbfdef352af34fb205d.",
      "revId": "bb21d0c4859c218d964bda9ea3b398cc2c4dfe9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}