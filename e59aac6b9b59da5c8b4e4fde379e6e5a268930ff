{
  "comments": [
    {
      "key": {
        "uuid": "3ad6900d_4cdc5c52",
        "filename": "vp10/common/blockd.h",
        "patchSetId": 6
      },
      "lineNbr": 389,
      "author": {
        "id": 1003078
      },
      "writtenOn": "2016-07-13T20:04:42Z",
      "side": 1,
      "message": "Probably we do not need this pointer in xd. See comment in decodeframe.c",
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ad6900d_7519e070",
        "filename": "vp10/common/blockd.h",
        "patchSetId": 6
      },
      "lineNbr": 389,
      "author": {
        "id": 1137754
      },
      "writtenOn": "2016-07-13T23:12:14Z",
      "side": 1,
      "message": "See my comment in decodeframe",
      "parentUuid": "3ad6900d_4cdc5c52",
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ad6900d_2c88f887",
        "filename": "vp10/decoder/decodeframe.c",
        "patchSetId": 6
      },
      "lineNbr": 3475,
      "author": {
        "id": 1003078
      },
      "writtenOn": "2016-07-13T20:04:42Z",
      "side": 1,
      "message": "Why not directly assigning the decoded integers to params-\u003emotion_params.wmmat[]? It seems not necessary to read the integers-\u003econvert to H[]-\u003econvert back to integers. Later to complete the functionality, if double type H[] is still needed in the prediction step, we can have a function at the decoder side doing the opposite of vp10_integerize_model to convert wmmat[] to H[].",
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ad6900d_12350a36",
        "filename": "vp10/decoder/decodeframe.c",
        "patchSetId": 6
      },
      "lineNbr": 3475,
      "author": {
        "id": 1137754
      },
      "writtenOn": "2016-07-13T20:30:22Z",
      "side": 1,
      "message": "The only reason I did it this way is to allow gm parameters to have lower precision than warped motion parameters. They then need to be decoded to higher precision to use with the warped motion model. Instead of doing integerize I could just H*(1 \u003c\u003c (WARPED_PRECISION - GM_PRECISION)) but this will break if someone sets GM_PRECISION \u003e WARPED_PRECISION. I can write it so it divides if GM \u003e WARPED but I thought it might be more readable to use integerize.",
      "parentUuid": "3ad6900d_2c88f887",
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ad6900d_2c5398cd",
        "filename": "vp10/decoder/decodeframe.c",
        "patchSetId": 6
      },
      "lineNbr": 3487,
      "author": {
        "id": 1003078
      },
      "writtenOn": "2016-07-13T20:04:42Z",
      "side": 1,
      "message": "For consistency with the encoder side, before coding the models, some flags like cpi-\u003eglobal_motion_used[frame] (moving them to cm could make things simpler) should have been decoded from uncompressed_header and be checked here.",
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ad6900d_ac324896",
        "filename": "vp10/decoder/decodeframe.c",
        "patchSetId": 6
      },
      "lineNbr": 3772,
      "author": {
        "id": 1003078
      },
      "writtenOn": "2016-07-13T20:04:42Z",
      "side": 1,
      "message": "Is it necessary to copy it to xd if the models do not vary from block to block? Later if predictors in commom/reconinter.c need the model, we can #include \"vp10/common/onyxc_int.h\" to use things in cm",
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ad6900d_f5033007",
        "filename": "vp10/decoder/decodeframe.c",
        "patchSetId": 6
      },
      "lineNbr": 3772,
      "author": {
        "id": 1137754
      },
      "writtenOn": "2016-07-13T23:12:14Z",
      "side": 1,
      "message": "You are correct but I think this will force me to change a ton of function signatures in reconinter.c and pass all of cm even though I only need one member from it. I can do this if you think it is much better.",
      "parentUuid": "3ad6900d_ac324896",
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ad6900d_6c2cc09f",
        "filename": "vp10/encoder/bitstream.c",
        "patchSetId": 6
      },
      "lineNbr": 3227,
      "author": {
        "id": 1003078
      },
      "writtenOn": "2016-07-13T20:04:42Z",
      "side": 1,
      "message": "(1) we probably need to encode cpi-\u003eglobal_motion_used in write_uncompressed_header() if decoder cannot determine it by itself\n(2) \"if (!cpi-\u003eglobal...) {memset(...}\", should be outside the loop \"for (i \u003d 0; i \u003c...)\"",
      "range": {
        "startLine": 3227,
        "startChar": 15,
        "endLine": 3227,
        "endChar": 44
      },
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ad6900d_759ac02f",
        "filename": "vp10/encoder/bitstream.c",
        "patchSetId": 6
      },
      "lineNbr": 3227,
      "author": {
        "id": 1137754
      },
      "writtenOn": "2016-07-13T23:12:14Z",
      "side": 1,
      "message": "(1) if global motion is not used, the only thing sent in the bitstream is gmtype, which will be GLOBAL_ZERO. This is enough for the decoder to determine gm is not used. Gm is only used if the mode is ZEROMV and gmtype is not GLOBAL_ZERO. This will eventually be a part of build_inter_predictors in reconinter, which I am currently working on. \n(2) currently addressing",
      "parentUuid": "3ad6900d_6c2cc09f",
      "range": {
        "startLine": 3227,
        "startChar": 15,
        "endLine": 3227,
        "endChar": 44
      },
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ad6900d_6cc84017",
        "filename": "vp10/encoder/bitstream.c",
        "patchSetId": 6
      },
      "lineNbr": 3406,
      "author": {
        "id": 1003078
      },
      "writtenOn": "2016-07-13T20:04:42Z",
      "side": 1,
      "message": "Should be less indented.",
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ad6900d_753e40d0",
        "filename": "vp10/encoder/bitstream.c",
        "patchSetId": 6
      },
      "lineNbr": 3406,
      "author": {
        "id": 1137754
      },
      "writtenOn": "2016-07-13T23:12:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ad6900d_6cc84017",
      "revId": "e59aac6b9b59da5c8b4e4fde379e6e5a268930ff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}