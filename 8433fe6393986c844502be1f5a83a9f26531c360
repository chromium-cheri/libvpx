{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5aa88ff0_32cca968",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-08T21:57:11Z",
      "side": 1,
      "message": "LGTM. Thanks!",
      "revId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02a9ee47_0f4a4015",
        "filename": "vpx/vpx_ext_ratectrl.h",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-08T21:57:11Z",
      "side": 1,
      "message": "The `::` syntax is not valid in C, but most users of this header file should understand this syntax.",
      "revId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac2e9c0d_cddc16de",
        "filename": "vpx/vpx_ext_ratectrl.h",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-05-08T22:53:52Z",
      "side": 1,
      "message": "\u003e The `::` syntax is not valid in C, but most users of this header file should understand this syntax.\n\nI forgot post a note. `vpx_rc_funcs_t#create_model()` works too if that seems better though that\u0027s more java style.",
      "parentUuid": "02a9ee47_0f4a4015",
      "revId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0db0aae3_74f9db84",
        "filename": "vpx/vpx_ext_ratectrl.h",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-08T23:08:12Z",
      "side": 1,
      "message": "I remember Java uses a dot `.` instead of a double colon `::`. I think most users of this header are more likely to be familiar with the C++ syntax than the Java syntax.\n\nThe original comment is also clear to me, although I would probably remove the word \"defined\".",
      "parentUuid": "ac2e9c0d_cddc16de",
      "revId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "401e4e05_816b4d60",
        "filename": "vpx/vpx_ext_ratectrl.h",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-05-08T23:16:55Z",
      "side": 1,
      "message": "\u003e I remember Java uses a dot `.` instead of a double colon `::`. I think most users of this header are more likely to be familiar with the C++ syntax than the Java syntax.\n\u003e \n\u003e The original comment is also clear to me, although I would probably remove the word \"defined\".\n\nI removed the latter half after I linkified this one. Here it\u0027s doxygen syntax to autolink the member:\n\nhttps://www.doxygen.nl/manual/autolink.html",
      "parentUuid": "0db0aae3_74f9db84",
      "revId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8dab45a1_046eaf2c",
        "filename": "vpx/vpx_ext_ratectrl.h",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-08T23:21:13Z",
      "side": 1,
      "message": "I didn\u0027t know that\u0027s doxygen syntax. We should use it.",
      "parentUuid": "401e4e05_816b4d60",
      "revId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fced61c9_df2f9f4c",
        "filename": "vpx/vpx_ext_ratectrl.h",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-05-08T23:43:48Z",
      "side": 1,
      "message": "\u003e I didn\u0027t know that\u0027s doxygen syntax. We should use it.\n\nJust to note, using `#` only affects the source; doxygen will produce `::` in the html.",
      "parentUuid": "8dab45a1_046eaf2c",
      "revId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "8433fe6393986c844502be1f5a83a9f26531c360",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}