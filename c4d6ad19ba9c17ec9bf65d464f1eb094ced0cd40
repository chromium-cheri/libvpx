{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d676dd82_67eff018",
        "filename": "vp8/encoder/ratectrl.c",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-07-30T22:29:33Z",
      "side": 1,
      "message": "This calculation is also in VP9 and AV1. You can find it by searching for \"framerate - 16\" in libvpx and libaom.\n\n```\n$ find . -name \"*\" -a -type f | xargs grep \"framerate - 16\"\n```\n\nShould the fix below be ported to VP9 and AV1?",
      "revId": "c4d6ad19ba9c17ec9bf65d464f1eb094ced0cd40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2311e852_eb58ab23",
        "filename": "vp8/encoder/ratectrl.c",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-08-08T02:39:06Z",
      "side": 1,
      "message": "\u003e This calculation is also in VP9 and AV1. You can find it by searching for \"framerate - 16\" in libvpx and libaom.\n\u003e \n\u003e ```\n\u003e $ find . -name \"*\" -a -type f | xargs grep \"framerate - 16\"\n\u003e ```\n\u003e \n\u003e Should the fix below be ported to VP9 and AV1?\n\nhttps://chromium-review.googlesource.com/c/webm/libvpx/+/5762531\n\nAV1 carries the `int64_t` further and clamps the max rate result I believe.",
      "parentUuid": "d676dd82_67eff018",
      "revId": "c4d6ad19ba9c17ec9bf65d464f1eb094ced0cd40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffc2bc35_7f3490eb",
        "filename": "vp8/encoder/ratectrl.c",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-08-08T17:19:32Z",
      "side": 1,
      "message": "\u003e \u003e This calculation is also in VP9 and AV1. You can find it by searching for \"framerate - 16\" in libvpx and libaom.\n\u003e \u003e \n\u003e \u003e ```\n\u003e \u003e $ find . -name \"*\" -a -type f | xargs grep \"framerate - 16\"\n\u003e \u003e ```\n\u003e \u003e \n\u003e \u003e Should the fix below be ported to VP9 and AV1?\n\u003e \n\u003e https://chromium-review.googlesource.com/c/webm/libvpx/+/5762531\n\u003e \n\u003e AV1 carries the `int64_t` further and clamps the max rate result I believe.\n\nhttps://aomedia.googlesource.com/aom/+/d9408e2964b81870133fa3346414f48938bb8dbc/av1/encoder/ratectrl.c#2748:\n\n```c\nint av1_calc_iframe_target_size_one_pass_vbr(const AV1_COMP *const cpi) {\n  static const int kf_ratio \u003d 25;\n  const RATE_CONTROL *rc \u003d \u0026cpi-\u003erc;\n  const int64_t target \u003d (int64_t)rc-\u003eavg_frame_bandwidth * kf_ratio;\n  return av1_rc_clamp_iframe_target_size(cpi, target);\n}\n```\n\nhttps://aomedia.googlesource.com/aom/+/d9408e2964b81870133fa3346414f48938bb8dbc/av1/encoder/ratectrl.c#287:\n\n```c\nint av1_rc_clamp_iframe_target_size(const AV1_COMP *const cpi, int64_t target) {\n  const RATE_CONTROL *rc \u003d \u0026cpi-\u003erc;\n  const RateControlCfg *const rc_cfg \u003d \u0026cpi-\u003eoxcf.rc_cfg;\n  if (rc_cfg-\u003emax_intra_bitrate_pct) {\n    const int64_t max_rate \u003d\n        (int64_t)rc-\u003eavg_frame_bandwidth * rc_cfg-\u003emax_intra_bitrate_pct / 100;\n    target \u003d AOMMIN(target, max_rate);\n  }\n  if (target \u003e rc-\u003emax_frame_bandwidth) target \u003d rc-\u003emax_frame_bandwidth;\n  return (int)target;\n}\n```\n\n`rc-\u003emax_frame_bandwidth` is an int.",
      "parentUuid": "2311e852_eb58ab23",
      "revId": "c4d6ad19ba9c17ec9bf65d464f1eb094ced0cd40",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "c4d6ad19ba9c17ec9bf65d464f1eb094ced0cd40",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c4d6ad19ba9c17ec9bf65d464f1eb094ced0cd40",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c4d6ad19ba9c17ec9bf65d464f1eb094ced0cd40",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "c4d6ad19ba9c17ec9bf65d464f1eb094ced0cd40",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}