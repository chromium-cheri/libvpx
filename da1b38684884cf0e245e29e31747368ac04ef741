{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6bf19b46_d2fe310f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-03-29T20:52:57Z",
      "side": 1,
      "message": "James: I have a question for you.",
      "revId": "da1b38684884cf0e245e29e31747368ac04ef741",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3774d0d4_e07583a6",
        "filename": "vp9/encoder/vp9_rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 3455,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-03-29T20:52:57Z",
      "side": 1,
      "message": "James: Do you know what is a good initializer for this two-dimensional array of `struct buf_2d`?",
      "revId": "da1b38684884cf0e245e29e31747368ac04ef741",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50f7a922_73896da4",
        "filename": "vp9/encoder/vp9_rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 3455,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-03-29T22:53:36Z",
      "side": 1,
      "message": "\u003e James: Do you know what is a good initializer for this two-dimensional array of `struct buf_2d`?\n\n`{ 0 }` is enough, though this form is more common in the code base. Search for `\\[.*\\]\\[.*\\]\\s\u003d\\s{\\s0` and `\\[.*\\]\\[.*\\]\\s\u003d\\s{\\s{` for example.\n\nSee:\nhttps://en.cppreference.com/w/c/language/array_initialization\nhttps://en.cppreference.com/w/c/language/initialization#Empty_initialization",
      "parentUuid": "3774d0d4_e07583a6",
      "revId": "da1b38684884cf0e245e29e31747368ac04ef741",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dd8cdd0_44d7bc67",
        "filename": "vp9/encoder/vp9_rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 3455,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-03-29T23:54:47Z",
      "side": 1,
      "message": "Thank you, James.\n\nJingning: Please feel free to use the simpler initializer `\u003d { 0 }`.",
      "parentUuid": "50f7a922_73896da4",
      "revId": "da1b38684884cf0e245e29e31747368ac04ef741",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "da1b38684884cf0e245e29e31747368ac04ef741",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "da1b38684884cf0e245e29e31747368ac04ef741",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "da1b38684884cf0e245e29e31747368ac04ef741",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "da1b38684884cf0e245e29e31747368ac04ef741",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}