{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f9db09d9_e4e8b7e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000884
      },
      "writtenOn": "2024-05-02T17:35:41Z",
      "side": 1,
      "message": "Hi Wan-Teh, looks like the ASAN error was gone with this fix. Could you also check that?",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e3f2632_00bb4da6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-02T18:42:46Z",
      "side": 1,
      "message": "Thank you for the fix. I verified that the ASan error is gone with this fix.",
      "parentUuid": "f9db09d9_e4e8b7e0",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38a7445e_4227d129",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-02T22:25:46Z",
      "side": 1,
      "message": "Please wait for Bohan\u0027s review because I don\u0027t really understand this code. I suggest some changes to the comments.",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a478557_ad30ba43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000884
      },
      "writtenOn": "2024-05-03T18:08:11Z",
      "side": 1,
      "message": "Bohan, could you review this CL?",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "156f517e_9f5822a4",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 1346,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-02T22:25:46Z",
      "side": 1,
      "message": "Optional: These three functions (`get_token_alloc()`, `allocated_tokens()`, and `get_start_tok()`) are also in libaom but have different implementations. It would be good to study the differences between the libvpx and libaom implementations and make sure that libvpx is not missing some bug fixes that are in libaom.",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01e4ed47_a3842c70",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 1346,
      "author": {
        "id": 1000884
      },
      "writtenOn": "2024-05-03T18:06:27Z",
      "side": 1,
      "message": "AV1 and VP9 are basically doing the similar thing though the mi_size and sb_size are different.",
      "parentUuid": "156f517e_9f5822a4",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93cc2839_f519c526",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 1348,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-02T22:25:46Z",
      "side": 1,
      "message": "Do you think we can remove this TODO comment now?",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ade4da16_1cc473d8",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 1348,
      "author": {
        "id": 1000884
      },
      "writtenOn": "2024-05-03T18:06:27Z",
      "side": 1,
      "message": "Let\u0027s keep it since this fix didn\u0027t change that part.",
      "parentUuid": "93cc2839_f519c526",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3258529b_cf03c026",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 1353,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-02T22:25:46Z",
      "side": 1,
      "message": "1) Nit/optional: Change \"Use aligned mb_rows and mb_cols\" to \"Align mb_rows and mb_cols to a multiple of superblock size\"?\n\n2) It would be good to explain why we need to align to a multiple of superblock size.\n\nNote: Are we confident that the new size is large enough? If we are not sure, it would be good to pass the tile_tok to its consumers for bounds checking. (No need to do that in this CL.)",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc663f32_781be01c",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 1353,
      "author": {
        "id": 1000884
      },
      "writtenOn": "2024-05-03T18:06:27Z",
      "side": 1,
      "message": "The comment states that this alignment is better align with actual token sizes. This should be clear enough IMO. We were not able to reproduce the encoder failure locally, and the fixing of the memory overflow issue can be an indirect evidence. The size should be large enough now. For further study (beyond this CL\u0027s scope), if you have a better way to verify this, it will be nice to see.",
      "parentUuid": "3258529b_cf03c026",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ed71eb6_8d5f0633",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 1355,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-02T18:42:46Z",
      "side": 1,
      "message": "Could you add a comment to explain why we need to align to this particular power of 2?\n\nFor example, why don\u0027t we need to align to the power of `MI_BLOCK_SIZE_LOG2`, which would mean a multiple of superblock size (64x64)?\n\nAligning to `MI_BLOCK_SIZE_LOG2 - 1` means a multiple of 32x32.",
      "range": {
        "startLine": 1355,
        "startChar": 34,
        "endLine": 1355,
        "endChar": 56
      },
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e1bf064_21066b9c",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 1355,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-02T18:48:12Z",
      "side": 1,
      "message": "My previous comment has an error. I didn\u0027t realize that mb_rows and mb_cols are in units of 16 pixels (see the comment at line 1349), not 8 pixels. This extra power of 2 comes from the `\u003e\u003e 1` in lines 1364, 1365, and 1377, 1378.\n\nSo aligning to `MI_BLOCK_SIZE_LOG2 - 1` means a multiple of 64x64 (superblock size).\n\nDid I understand this correctly?",
      "parentUuid": "8ed71eb6_8d5f0633",
      "range": {
        "startLine": 1355,
        "startChar": 34,
        "endLine": 1355,
        "endChar": 56
      },
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9373e05_79d5fea3",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 1355,
      "author": {
        "id": 1000884
      },
      "writtenOn": "2024-05-02T19:49:39Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "7e1bf064_21066b9c",
      "range": {
        "startLine": 1355,
        "startChar": 34,
        "endLine": 1355,
        "endChar": 56
      },
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87ce7fe1_9be11505",
        "filename": "vp9/encoder/vp9_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 1378,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-02T18:58:14Z",
      "side": 1,
      "message": "In libaom, these two lines read:\n\n```\n  const int tile_mb_cols \u003d\n      (tile_info-\u003emi_col_end - tile_info-\u003emi_col_start + 2) \u003e\u003e 2;\n  const int tile_mb_row \u003d (mi_row - tile_info-\u003emi_row_start + 2) \u003e\u003e 2;\n```\n\nNote that the calculation of `mb_row` (`tile_mb_row`) differs in whether a rounding term is added.",
      "revId": "dbda744e404453625ebb1592774a4062a4f6dfdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}