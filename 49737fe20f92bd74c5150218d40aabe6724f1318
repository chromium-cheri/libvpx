{
  "comments": [
    {
      "key": {
        "uuid": "8fdd7d60_3a64ddbb",
        "filename": "vp8/common/reconintra4x4.c",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-07-28T04:13:03Z",
      "side": 1,
      "message": "I\u0027d rather not take chances, better to make it 8 in all cases, maybe protecting the 0 of the upper 4 with this, but it\u0027d be nice to check behavior with valgrind too.",
      "revId": "49737fe20f92bd74c5150218d40aabe6724f1318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fdd7d60_b7dd83da",
        "filename": "vp8/common/reconintra4x4.c",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2016-07-28T18:31:26Z",
      "side": 1,
      "message": "There is no chance to take, though. The 4 garbage values are unused. The only place this could cause issues is if for some reason it\u0027s running in a heavily protected memory environment and accessing those values causes a fault, but that would be an instant crasher and we could easily fix it then.",
      "parentUuid": "8fdd7d60_3a64ddbb",
      "revId": "49737fe20f92bd74c5150218d40aabe6724f1318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54d87e08_fa7cbd4f",
        "filename": "vp8/common/reconintra4x4.c",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-08-02T23:15:11Z",
      "side": 1,
      "message": "I mean you should make the variable [8] in all cases, but only need to clear it for the one known case for now",
      "parentUuid": "8fdd7d60_b7dd83da",
      "revId": "49737fe20f92bd74c5150218d40aabe6724f1318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4e61afd_22c80a7c",
        "filename": "vp8/common/reconintra4x4.c",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2016-08-03T19:49:52Z",
      "side": 1,
      "message": "I still don\u0027t understand what the benefit of making it [8] all the time is.",
      "parentUuid": "54d87e08_fa7cbd4f",
      "revId": "49737fe20f92bd74c5150218d40aabe6724f1318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4e61afd_05e158c4",
        "filename": "vp8/common/reconintra4x4.c",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-08-03T20:17:15Z",
      "side": 1,
      "message": "code moves around, so this should be allocating the space it requires. you\u0027re also limiting this to one stack sanitizer meaning you\u0027ll have to respond to other reports; setting the size is just a bit more proactive.",
      "parentUuid": "b4e61afd_22c80a7c",
      "revId": "49737fe20f92bd74c5150218d40aabe6724f1318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94f676e4_03caee46",
        "filename": "vp8/common/reconintra4x4.c",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2016-08-03T21:23:38Z",
      "side": 1,
      "message": "But 8 is not the size it requires - it only uses the first 4 bytes. Allocating 8 (and copying code) could result in new code which uses all 8 values. Allocating 4 signals that only 4 should be used.",
      "parentUuid": "b4e61afd_05e158c4",
      "revId": "49737fe20f92bd74c5150218d40aabe6724f1318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "148e0681_4f658d1a",
        "filename": "vp8/common/reconintra4x4.c",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-08-03T22:57:51Z",
      "side": 1,
      "message": "it loads 8-bytes from somewhere, correct?",
      "parentUuid": "94f676e4_03caee46",
      "revId": "49737fe20f92bd74c5150218d40aabe6724f1318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "148e0681_2f85a904",
        "filename": "vp8/common/reconintra4x4.c",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2016-08-03T23:16:13Z",
      "side": 1,
      "message": "True. It loads 4 extra bytes of garbage. It\u0027s not exactly a random location - it\u0027s whatever 4 bytes are after the existing allocation. But only in the case of neon and the extra values are not used. I don\u0027t think the common case should be forced to 8 because there is one outlier.\n\nAnd if another memory test does find it, it\u0027ll need to be updated because the memset only happens for ASan.",
      "parentUuid": "148e0681_4f658d1a",
      "revId": "49737fe20f92bd74c5150218d40aabe6724f1318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "148e0681_d2ffe255",
        "filename": "vp8/common/reconintra4x4.c",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-08-03T23:24:27Z",
      "side": 1,
      "message": "then at least break this in two and leave it at [8] for NEON in all cases with a note",
      "parentUuid": "148e0681_2f85a904",
      "revId": "49737fe20f92bd74c5150218d40aabe6724f1318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4e61afd_42cd168b",
        "filename": "vp8/common/reconintra4x4.c",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2016-08-03T19:49:52Z",
      "side": 1,
      "message": "should say \u002732 bits\u0027 not \u002732 bytes\u0027\n\nwoops",
      "revId": "49737fe20f92bd74c5150218d40aabe6724f1318",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}