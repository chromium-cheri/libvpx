{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8da058f9_09e3dff6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2021-11-16T13:27:42Z",
      "side": 1,
      "message": "Still trying to wrap my head around the main block. If you could add some comments it would be greatly appreciated!\n\nIf performance is better on some clips then it should be better on all. From a high level I think this does a much better job of keeping values in the xmm registers. The previous iteration extracted every value! This just extracts the mask.",
      "revId": "53df4ad4895bb1d5efcb5e5aad70057e37f359e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5e26099_6e093739",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1471133
      },
      "writtenOn": "2021-11-16T14:39:10Z",
      "side": 1,
      "message": "Maybe you know the average density of the EOB values found in the qcoeff[16] block? How does this change from encoder settings or input data?",
      "parentUuid": "8da058f9_09e3dff6",
      "revId": "53df4ad4895bb1d5efcb5e5aad70057e37f359e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c836f3f4_43702604",
        "filename": "vp8/encoder/x86/quantize_sse4.c",
        "patchSetId": 13
      },
      "lineNbr": 92,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2021-11-16T13:27:42Z",
      "side": 1,
      "message": "This could go into a block:\n/* Shuffle x and y into zig zag order */\n{\n  const __m128i zig_zag_i16_0 \u003d\n      _mm_setr_epi8(0, 1, 2, 3, 8, 9, 14, 15, 10, 11, 4, 5, 6, 7, 12, 13);\n  const __m128i zig_zag1 \u003d\n      _mm_setr_epi8(0, 1, 6, 7, 8, 9, 2, 3, 14, 15, 4, 5, 10, 11, 12, 13);\n  /* The first part of the zig zag needs a value from x_minus_zbin1 and vice versa */\n  __m128i t1 \u003d _mm_alignr_epi8(x_minus_zbin1, x_minus_zbin1, 2);\n  __m128i t0 \u003d _mm_blend_epi16(x_minus_zbin0, t1, 0x80);\n  t1 \u003d _mm_blend_epi16(t1, x_minus_zbin0, 0x80);\n  x_shuf0 \u003d _mm_shuffle_epi8(t0, idx0);\n  x_shuf1 \u003d _mm_shuffle_epi8(t1, idx1);\n\n  If you use vp8_default_zig_zag1d below, this can become:\n  const __m128i zig_zag_i8 \u003d\n      _mm_setr_epi8(0, 1, 2, 3, 8, 9, 14, 15, 10, 11, 4, 5, 6, 7, 12, 13);\n  \n  /* Check if y is nonzero and put it in zig zag order */\n  t0 \u003d _mm_packs_epi16(y0, y1);\n  t0 \u003d _mm_cmpeq_epi8(t0, _mm_setzero_si128());\n  t0 \u003d _mm_shuffle_epi8(t0, zig_zag_i8));\n  ymask \u003d _mm_movemask_epi8(t0) ^ 0xffff;\n}",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 92,
        "endChar": 0
      },
      "revId": "53df4ad4895bb1d5efcb5e5aad70057e37f359e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db44d0c6_480e08a5",
        "filename": "vp8/encoder/x86/quantize_sse4.c",
        "patchSetId": 13
      },
      "lineNbr": 92,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2021-11-16T13:34:56Z",
      "side": 1,
      "message": "The reason for putting this in a block is to separate out the steps in the logic and allow scoping the temporary variables.\n\nRenaming idx to something zig-zag related would be helpful. It took me a bit to figure out that idx0 is: 0, 1, 4, *8*, 5, 2, 3, 6, where 8 has been shuffled to the end of the register and idx1 is equiv to 9, 12, 13, 10, *7*, 11, 14, 15, where again the out-of-range 7 has been shuffled over.",
      "parentUuid": "c836f3f4_43702604",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 92,
        "endChar": 0
      },
      "revId": "53df4ad4895bb1d5efcb5e5aad70057e37f359e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51250a1d_3b2f5e67",
        "filename": "vp8/encoder/x86/quantize_sse4.c",
        "patchSetId": 13
      },
      "lineNbr": 92,
      "author": {
        "id": 1471133
      },
      "writtenOn": "2021-11-16T14:39:10Z",
      "side": 1,
      "message": "Put it in the block. You want temps to be declared both in a block and in a loop?",
      "parentUuid": "db44d0c6_480e08a5",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 92,
        "endChar": 0
      },
      "revId": "53df4ad4895bb1d5efcb5e5aad70057e37f359e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e542b67f_18363f9f",
        "filename": "vp8/encoder/x86/quantize_sse4.c",
        "patchSetId": 13
      },
      "lineNbr": 111,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2021-11-16T13:27:42Z",
      "side": 1,
      "message": "Does it work any better or worse if you use vp8_default_zig_zag1d here? The int lookups may be faster than uint8_t",
      "range": {
        "startLine": 111,
        "startChar": 11,
        "endLine": 111,
        "endChar": 23
      },
      "revId": "53df4ad4895bb1d5efcb5e5aad70057e37f359e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "319ccafa_cfbd4bf2",
        "filename": "vp8/encoder/x86/quantize_sse4.c",
        "patchSetId": 13
      },
      "lineNbr": 111,
      "author": {
        "id": 1471133
      },
      "writtenOn": "2021-11-16T14:39:10Z",
      "side": 1,
      "message": "I can\u0027t see any difference on my computer.",
      "parentUuid": "e542b67f_18363f9f",
      "range": {
        "startLine": 111,
        "startChar": 11,
        "endLine": 111,
        "endChar": 23
      },
      "revId": "53df4ad4895bb1d5efcb5e5aad70057e37f359e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c9e607c_425ff60c",
        "filename": "vpx_ports/bitops.h",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2021-11-16T13:27:42Z",
      "side": 1,
      "message": "and get_lsb()",
      "range": {
        "startLine": 29,
        "startChar": 21,
        "endLine": 29,
        "endChar": 28
      },
      "revId": "53df4ad4895bb1d5efcb5e5aad70057e37f359e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09564164_b12c2a21",
        "filename": "vpx_ports/bitops.h",
        "patchSetId": 13
      },
      "lineNbr": 29,
      "author": {
        "id": 1471133
      },
      "writtenOn": "2021-11-16T14:39:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c9e607c_425ff60c",
      "range": {
        "startLine": 29,
        "startChar": 21,
        "endLine": 29,
        "endChar": 28
      },
      "revId": "53df4ad4895bb1d5efcb5e5aad70057e37f359e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}