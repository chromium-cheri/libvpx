{
  "comments": [
    {
      "key": {
        "uuid": "AAAAdn//6wk\u003d",
        "filename": "vp9/encoder/vp9_onyx_if.c",
        "patchSetId": 1
      },
      "lineNbr": 3332,
      "author": {
        "id": 1002442
      },
      "writtenOn": "2014-01-27T21:13:25Z",
      "side": 1,
      "message": "May be you should just delete --profile option from command line and use right profile number based on subsampling values?  4:4:4 will not be available for  libvpx uses unless the provide special configuration options. So there is no need to do extra protection with --profile option.",
      "revId": "321f0ee272349b66535b56e0b10cf753755f1bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAdn//6t8\u003d",
        "filename": "vp9/encoder/vp9_onyx_if.c",
        "patchSetId": 1
      },
      "lineNbr": 3332,
      "author": {
        "id": 1108009
      },
      "writtenOn": "2014-01-27T23:04:14Z",
      "side": 1,
      "message": "I thought the plan was to drop the extra configuration options",
      "parentUuid": "AAAAdn//6wk\u003d",
      "revId": "321f0ee272349b66535b56e0b10cf753755f1bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAdn//6tw\u003d",
        "filename": "vp9/encoder/vp9_onyx_if.c",
        "patchSetId": 1
      },
      "lineNbr": 3332,
      "author": {
        "id": 1002442
      },
      "writtenOn": "2014-01-27T23:12:58Z",
      "side": 1,
      "message": "That\u0027s exactly what I suggested... You could delete --profile options from vpxenc: \nstatic const arg_def_t profile          \u003d ARG_DEF(NULL, \"profile\", 1,\n                                                  \"Bitstream profile number to use\");",
      "parentUuid": "AAAAdn//6t8\u003d",
      "revId": "321f0ee272349b66535b56e0b10cf753755f1bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAdn//6tQ\u003d",
        "filename": "vp9/encoder/vp9_onyx_if.c",
        "patchSetId": 1
      },
      "lineNbr": 3332,
      "author": {
        "id": 1108009
      },
      "writtenOn": "2014-01-27T23:32:31Z",
      "side": 1,
      "message": "You said: \"4:4:4 will not be available for libvpx uses unless the provide special configuration options. So there is no need to do extra protection with --profile option.\" but AFAIK we are dropping the \"special configuration options\" so all that remains is the profile option. \n\nAlso your solution does nothing to protect API users. Right now you can pass the API g_profile \u003d0 and non-420 frames and get an nonsensical bitstream back.",
      "parentUuid": "AAAAdn//6tw\u003d",
      "revId": "321f0ee272349b66535b56e0b10cf753755f1bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAdn//6tE\u003d",
        "filename": "vp9/encoder/vp9_onyx_if.c",
        "patchSetId": 1
      },
      "lineNbr": 3332,
      "author": {
        "id": 1002442
      },
      "writtenOn": "2014-01-27T23:44:51Z",
      "side": 1,
      "message": "If understand correctly, now user has to provide \"--enable-experimental --enable-non420\" options to enable YUV 4:4:4 support. I think this should the only step to enable it, so it will not be necessary to provide additional --profile option for encoder. Encoder will be able to detect that user encodes 4:4:4 content and it will put correct profile version automatically into bitstream.",
      "parentUuid": "AAAAdn//6tQ\u003d",
      "revId": "321f0ee272349b66535b56e0b10cf753755f1bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAdn//6s4\u003d",
        "filename": "vp9/encoder/vp9_onyx_if.c",
        "patchSetId": 1
      },
      "lineNbr": 3332,
      "author": {
        "id": 1108009
      },
      "writtenOn": "2014-01-27T23:54:15Z",
      "side": 1,
      "message": "From what I understand The \"--enable-non420\" flag is going to be dropped and 4:4:4 will be supported in a regular build. \n\nAnd what about API usage. Choose one option:\n\nA) Ignore the g_profile value from the caller and set an appropriate profile based to features used\n\nB) Use the g_profile value specified by the caller and spit out an invalid bitstream. \n\nC) Fail to encode if g_profile cannot support the features requested. \n\nD) Other\n\nOur current behavior is option \"B.\" This patchset implements option \"C.\"",
      "parentUuid": "AAAAdn//6tE\u003d",
      "revId": "321f0ee272349b66535b56e0b10cf753755f1bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}