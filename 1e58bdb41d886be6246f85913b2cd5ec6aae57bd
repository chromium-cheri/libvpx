{
  "comments": [
    {
      "key": {
        "uuid": "758e522d_951675a2",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2018-11-20T18:03:52Z",
      "side": 0,
      "message": "Should frame_size be size_t throughout?",
      "revId": "1e58bdb41d886be6246f85913b2cd5ec6aae57bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "559a12d6_d2e76d67",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2018-11-20T18:40:45Z",
      "side": 0,
      "message": "I believe we declare uvplane_size and frame_size as uint64_t to avoid overflows in the additions and multiplications in line 170 and line 174.\n\nIf we declare uvplane_size and frame_size as size_t, then on 32-bit platforms, these variable are only 32 bits, and we will need to check for overflow *before* we perform an addition or multiplication. Using uint64_t allows us to check for overflow after the fact, at line 183.",
      "parentUuid": "758e522d_951675a2",
      "revId": "1e58bdb41d886be6246f85913b2cd5ec6aae57bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddd6452a_6766aea3",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2018-11-20T17:42:46Z",
      "side": 0,
      "message": "This (int) cast may have come from the (int) cast in line 218, where we assign frame_size to ybf-\u003ebuffer_alloc_sz, which has the int type. Since the third parameter of memset() is a size_t, we should use a (size_t) cast here.",
      "range": {
        "startLine": 207,
        "startChar": 35,
        "endLine": 207,
        "endChar": 50
      },
      "revId": "1e58bdb41d886be6246f85913b2cd5ec6aae57bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7650c9b6_66a1e4b0",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2018-11-20T18:03:52Z",
      "side": 0,
      "message": "This is being cast to size_t before comparing.",
      "range": {
        "startLine": 210,
        "startChar": 29,
        "endLine": 210,
        "endChar": 35
      },
      "revId": "1e58bdb41d886be6246f85913b2cd5ec6aae57bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0df8898_fa01facd",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2018-11-20T18:40:45Z",
      "side": 0,
      "message": "I believe this cast is intended to avoid a compiler warning on signed-unsigned comparison.\n\nWould you like me to try to declare ybf-\u003ebuffer_alloc_sz as size_t?",
      "parentUuid": "7650c9b6_66a1e4b0",
      "range": {
        "startLine": 210,
        "startChar": 29,
        "endLine": 210,
        "endChar": 35
      },
      "revId": "1e58bdb41d886be6246f85913b2cd5ec6aae57bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "397eeb1b_c4d5b8cd",
        "filename": "vpx_scale/generic/yv12config.c",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2018-11-20T20:26:37Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "f0df8898_fa01facd",
      "range": {
        "startLine": 210,
        "startChar": 29,
        "endLine": 210,
        "endChar": 35
      },
      "revId": "1e58bdb41d886be6246f85913b2cd5ec6aae57bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}