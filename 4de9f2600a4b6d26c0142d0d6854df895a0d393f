{
  "comments": [
    {
      "key": {
        "uuid": "736d61b3_4762fe0c",
        "filename": "vp8/encoder/encodemb.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2015-07-07T00:11:55Z",
      "side": 1,
      "message": "it doesn\u0027t look like there are many callers. would it be possible to fix them directly? (3 call sites for this, 4 for mbuy, two of which are in this file, 5 for mbuv, 3 in this file)",
      "range": {
        "startLine": 23,
        "startChar": 19,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "4de9f2600a4b6d26c0142d0d6854df895a0d393f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93201584_c7ce0027",
        "filename": "vp8/encoder/encodemb.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001914
      },
      "writtenOn": "2015-07-07T05:20:22Z",
      "side": 1,
      "message": "I kind of think these three wrapper functions provide better readability than directly calling vpx_subtract_block() function. They explicitly separate the use for 4x4 blocks, macroblock chroma components, and macroblock luma component.",
      "parentUuid": "736d61b3_4762fe0c",
      "range": {
        "startLine": 23,
        "startChar": 19,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "4de9f2600a4b6d26c0142d0d6854df895a0d393f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "135425e3_04600604",
        "filename": "vp8/encoder/encodemb.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2015-07-07T05:46:46Z",
      "side": 1,
      "message": "this is no worse than the old vp8 asm adapters, though removing them might help as it will remove a function call, that would be better done as a subsequent change. the somewhat unfortunate thing here is that the block sizes are passed as variables, constants can help simplify loops in the asm.",
      "parentUuid": "93201584_c7ce0027",
      "range": {
        "startLine": 23,
        "startChar": 19,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "4de9f2600a4b6d26c0142d0d6854df895a0d393f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "135425e3_6479d2ec",
        "filename": "vp8/encoder/encodemb.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001914
      },
      "writtenOn": "2015-07-07T16:29:14Z",
      "side": 1,
      "message": "Perhaps we should make a set of subtraction functions, each corresponds to a particular block size and call them via function pointer, like what we do for variance and SAD. This probably involves redesign the SIMD optimizations though.\n\nLet\u0027s keep this issue open and revisit it after the VPx factoring work(?)",
      "parentUuid": "135425e3_04600604",
      "range": {
        "startLine": 23,
        "startChar": 19,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "4de9f2600a4b6d26c0142d0d6854df895a0d393f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "135425e3_1f468f24",
        "filename": "vp8/encoder/encodemb.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2015-07-07T18:04:23Z",
      "side": 1,
      "message": "yes I was just mentioning this to raise awareness. keeping this change small is the best approach before refactoring which may break things",
      "parentUuid": "135425e3_6479d2ec",
      "range": {
        "startLine": 23,
        "startChar": 19,
        "endLine": 23,
        "endChar": 20
      },
      "revId": "4de9f2600a4b6d26c0142d0d6854df895a0d393f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "135425e3_646f12f4",
        "filename": "vp8/encoder/encodemb.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2015-07-07T05:46:46Z",
      "side": 1,
      "message": "fix the alignment",
      "revId": "4de9f2600a4b6d26c0142d0d6854df895a0d393f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "135425e3_44a12ef6",
        "filename": "vp8/encoder/encodemb.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1001914
      },
      "writtenOn": "2015-07-07T16:29:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "135425e3_646f12f4",
      "revId": "4de9f2600a4b6d26c0142d0d6854df895a0d393f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}