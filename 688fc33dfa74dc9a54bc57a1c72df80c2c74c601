{
  "comments": [
    {
      "key": {
        "uuid": "AAAAQ3//4xc\u003d",
        "filename": "vp9/common/idctllm.c",
        "patchSetId": 2
      },
      "lineNbr": 1272,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2012-11-06T00:42:01Z",
      "side": 1,
      "message": "lrint() or lround()?",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQ3//4jo\u003d",
        "filename": "vp9/common/idctllm.c",
        "patchSetId": 2
      },
      "lineNbr": 1272,
      "author": {
        "id": 1000893
      },
      "writtenOn": "2012-11-06T04:42:49Z",
      "side": 1,
      "message": "those functions are not supported in math.h for MSVC, would need a bit more work to write them, at same time no breaking for other compiler.\n\nalso on this one, we will do away soon with floating point operations anyway.",
      "parentUuid": "AAAAQ3//4xc\u003d",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQ3//4xg\u003d",
        "filename": "vp9/common/quant_common.c",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2012-11-06T00:42:01Z",
      "side": 1,
      "message": "lrint() or lround()?",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQ3//4jk\u003d",
        "filename": "vp9/common/quant_common.c",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1000893
      },
      "writtenOn": "2012-11-06T04:42:49Z",
      "side": 1,
      "message": "not supported natively by MSVC compiler, would require a bit extra work.",
      "parentUuid": "AAAAQ3//4xg\u003d",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQ3//4xY\u003d",
        "filename": "vp9/encoder/encodeframe.c",
        "patchSetId": 2
      },
      "lineNbr": 1393,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2012-11-06T00:42:01Z",
      "side": 1,
      "message": "The type here should probably be unsigned int, not uint32_t.",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQ3//4jg\u003d",
        "filename": "vp9/encoder/encodeframe.c",
        "patchSetId": 2
      },
      "lineNbr": 1393,
      "author": {
        "id": 1000893
      },
      "writtenOn": "2012-11-06T04:42:49Z",
      "side": 1,
      "message": "uint32_t is typedef\u0027ed of unsigned int under msvc compiler, I do not remember which one is/should be preferred, but I will change this to unsigned int in next patch",
      "parentUuid": "AAAAQ3//4xY\u003d",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQ3//4xQ\u003d",
        "filename": "vp9/encoder/onyx_int.h",
        "patchSetId": 2
      },
      "lineNbr": 675,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2012-11-06T00:42:01Z",
      "side": 1,
      "message": "I\u0027m not sure these should be floating point. Can we somehow keep them integers?",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQ3//4jw\u003d",
        "filename": "vp9/encoder/onyx_int.h",
        "patchSetId": 2
      },
      "lineNbr": 675,
      "author": {
        "id": 1000893
      },
      "writtenOn": "2012-11-06T04:42:49Z",
      "side": 1,
      "message": "64bit is large enough for practical purpose, but the reason I used double is that most other variables these two have operations with are doubles, therefore making them double avoided the conversion back and forth.",
      "parentUuid": "AAAAQ3//4xQ\u003d",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQ3//4xE\u003d",
        "filename": "vp9/encoder/x86/x86_csystemdependent.c",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2012-11-06T00:42:01Z",
      "side": 1,
      "message": "Doesn\u0027t that go in vpx_rtcd.h?",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQ3//4jc\u003d",
        "filename": "vp9/encoder/x86/x86_csystemdependent.c",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000893
      },
      "writtenOn": "2012-11-06T04:42:49Z",
      "side": 1,
      "message": "will move",
      "parentUuid": "AAAAQ3//4xE\u003d",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAQ3//4w8\u003d",
        "filename": "vpx_ports/x86.h",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2012-11-06T00:42:01Z",
      "side": 1,
      "message": "We probably want to change the return type of this function to uint64_t? rdtsc returns a 64bit number.",
      "revId": "688fc33dfa74dc9a54bc57a1c72df80c2c74c601",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}