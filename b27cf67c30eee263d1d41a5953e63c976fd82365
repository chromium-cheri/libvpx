{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "10c7862a_902e5611",
        "filename": "test/register_state_check.h",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2023-04-25T20:26:16Z",
      "side": 1,
      "message": "is this shadowing the declaration at line 132?",
      "range": {
        "startLine": 190,
        "startChar": 41,
        "endLine": 190,
        "endChar": 54
      },
      "revId": "b27cf67c30eee263d1d41a5953e63c976fd82365",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aec346bc_7bdab7fb",
        "filename": "test/register_state_check.h",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2023-04-25T20:32:27Z",
      "side": 1,
      "message": "\u003e is this shadowing the declaration at line 132?\n\nRight.",
      "parentUuid": "10c7862a_902e5611",
      "range": {
        "startLine": 190,
        "startChar": 41,
        "endLine": 190,
        "endChar": 54
      },
      "revId": "b27cf67c30eee263d1d41a5953e63c976fd82365",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "845fe0c0_34a52ab8",
        "filename": "test/register_state_check.h",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2023-04-25T20:34:04Z",
      "side": 1,
      "message": "\u003e \u003e is this shadowing the declaration at line 132?\n\u003e \n\u003e Right.\n\n```\nIn file included from ../libvpx/test/decode_test_driver.cc:15:\n../libvpx/test/decode_test_driver.cc: In member function ‘vpx_codec_err_t libvpx_test::Decoder::DecodeFrame(const uint8_t*, size_t, void*)’:\n../libvpx/test/register_state_check.h:88:39: warning: declaration of ‘reg_check’ shadows a previous local [-Wshadow]\n   88 |       libvpx_test::RegisterStateCheck reg_check; \\\n      |                                       ^~~~~~~~~\n../libvpx/test/register_state_check.h:191:7: note: in expansion of macro ‘ASM_REGISTER_STATE_CHECK’\n  191 |       ASM_REGISTER_STATE_CHECK(statement);          \\\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~\n../libvpx/test/decode_test_driver.cc:36:3: note: in expansion of macro ‘API_REGISTER_STATE_CHECK’\n   36 |   API_REGISTER_STATE_CHECK(\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~\n../libvpx/test/register_state_check.h:190:42: note: shadowed declaration is here\n  190 |       libvpx_test::RegisterStateCheckMMX reg_check; \\\n      |                                          ^~~~~~~~~\n../libvpx/test/decode_test_driver.cc:36:3: note: in expansion of macro ‘API_REGISTER_STATE_CHECK’\n   36 |   API_REGISTER_STATE_CHECK(\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~\n```",
      "parentUuid": "aec346bc_7bdab7fb",
      "range": {
        "startLine": 190,
        "startChar": 41,
        "endLine": 190,
        "endChar": 54
      },
      "revId": "b27cf67c30eee263d1d41a5953e63c976fd82365",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "b27cf67c30eee263d1d41a5953e63c976fd82365",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "b27cf67c30eee263d1d41a5953e63c976fd82365",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b27cf67c30eee263d1d41a5953e63c976fd82365",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b27cf67c30eee263d1d41a5953e63c976fd82365",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "b27cf67c30eee263d1d41a5953e63c976fd82365",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}