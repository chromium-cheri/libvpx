{
  "comments": [
    {
      "key": {
        "uuid": "117a9d68_99c47f37",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1126912
      },
      "writtenOn": "2016-09-02T17:56:45Z",
      "side": 1,
      "message": "Can we make use of this code when the compiler supports it, and leave the technically-unsafe code to platforms not supporting building atomics?",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "117a9d68_59aca78c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1126912
      },
      "writtenOn": "2016-09-02T17:56:45Z",
      "side": 1,
      "message": "int32 on windows is not atomic unless the volatile keyword is used, but I don\u0027t know when visual studio would miscompile a program to x86 because of this.\n\nhttps://msdn.microsoft.com/en-us/library/12a04hfd.aspx (see /volatile:ms)",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91668dcf_da10a55c",
        "filename": "vp8/common/threading.h",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1000853
      },
      "writtenOn": "2016-09-02T17:56:24Z",
      "side": 1,
      "message": "As said in the other patch, there\u0027s a better solution for this problem (namely using atomic variables), and I suggest to concentrate our efforts on that.\nFor the present it\u0027s perfectly fine to just keep the existing suppressions instead of having a separate synchronization logic exclusively for TSan.",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d602bbf6_3cf451ba",
        "filename": "vp8/common/threading.h",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1000963
      },
      "writtenOn": "2016-09-02T18:04:43Z",
      "side": 1,
      "message": "I tried using atomic variables through gcc ( described in commit message above) and am happy to put them in but will need to do something different on windows I thought disabling tsan altogether was dangerous in case of other possibly real problems ( like the ones at the end of the encode loop) and hoped to keep some level of tsan on even if just for internal libvpx testing.",
      "parentUuid": "91668dcf_da10a55c",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91668dcf_1a1bfd7e",
        "filename": "vp8/common/threading.h",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1000853
      },
      "writtenOn": "2016-09-02T18:12:34Z",
      "side": 1,
      "message": "\u003e  tried using atomic variables through gcc ( described in commit message above) and am happy to put them in but will need to do something different on windows \n\nYou can take a look at base/atomicops.h in Chrome, there is a Windows version.\nIt isn\u0027t 100% clear from the C++ Standard point of view (just because there are no atomics, and the ints aren\u0027t guaranteed to be such), but it\u0027s better than raw reads and writes, because you see which accesses are actually atomic (and will need to be replaced when migrating to std::atomic or such).\n\n\u003e I thought disabling tsan altogether was dangerous in case of other possibly real problems ( like the ones at the end of the encode loop) and hoped to keep some level of tsan on even if just for internal libvpx testing.\nTSan works best if it tests exactly the same code as you\u0027re running without TSan. If you start adding mutexes that are enabled only for TSan, you\u0027ll be checking some other program, not the one you\u0027re interested in.\nAlso, protecting every memory access with a mutex may introduce unwanted happens-before arcs which may mask some other problems (not sure this is the case here, I don\u0027t remember the code well enough).",
      "parentUuid": "d602bbf6_3cf451ba",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d602bbf6_825ade52",
        "filename": "vp8/common/threading.h",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1000963
      },
      "writtenOn": "2016-09-02T20:32:27Z",
      "side": 1,
      "message": "re TSan works best if it tests exactly the same code as you\u0027re running without TSan. If you start adding mutexes that are enabled only for TSan, you\u0027ll be checking some other program, not the one you\u0027re interested in.\n\nAgreed : the if tsan threads won\u0027t be checked but the rest of the code is ( including the use of semaphores else where).  \n\nOther than that I\u0027m also happy to take patches with atomic.  Provided they don\u0027t hurt performance at all.",
      "parentUuid": "91668dcf_1a1bfd7e",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "117a9d68_b9c93b50",
        "filename": "vp8/common/threading.h",
        "patchSetId": 4
      },
      "lineNbr": 214,
      "author": {
        "id": 1126912
      },
      "writtenOn": "2016-09-02T17:56:45Z",
      "side": 1,
      "message": "Could this block be protected with something like if !MSVC, and then use real atomics?",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d602bbf6_dcfa0da3",
        "filename": "vp8/common/threading.h",
        "patchSetId": 4
      },
      "lineNbr": 214,
      "author": {
        "id": 1000963
      },
      "writtenOn": "2016-09-02T18:04:43Z",
      "side": 1,
      "message": "I think its more than !msvc ( ie like specific versions of gcc ) but it can be done and I talked about that in the message above.   \n\nIf you guys prefer that I can do it.",
      "parentUuid": "117a9d68_b9c93b50",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}