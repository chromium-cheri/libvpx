{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9c52198e_f998623f",
        "filename": "test/encode_api_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 372,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2023-05-02T21:51:19Z",
      "side": 1,
      "message": "since this is new code in a file without any other classes let\u0027s use `override` instead of `virtual`.",
      "revId": "deefed379027fb0a955921ec3912c37361a19e3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2d6f607_e17b721a",
        "filename": "test/encode_api_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 372,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2023-05-02T22:36:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c52198e_f998623f",
      "revId": "deefed379027fb0a955921ec3912c37361a19e3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02d972e3_6f18004f",
        "filename": "vpx/vpx_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 899,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2023-05-02T21:51:19Z",
      "side": 1,
      "message": "if we\u0027re going to modify the api then maybe something more generic would be useful:\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/libwebp/src/src/webp/types.h;l\u003d60;drc\u003d639619ce725da4ee1124863634c32fb89ce69081",
      "revId": "deefed379027fb0a955921ec3912c37361a19e3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fb43c3c_fbea3463",
        "filename": "vpx/vpx_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 899,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2023-05-02T22:36:45Z",
      "side": 1,
      "message": "Should we make ```vpx_free()``` and ```vpx_calloc()``` public then?\n\nMy intention for these dedicated helpers was to make it clear and easier to understand how to use the new codec control.\n\nIf that\u0027s less of a concern, I could\n - Remove these helpers and just allocate the memory in the test / applications with ```calloc()``` and ```free()```, or\n - Make ```vpx_free()``` and ```vpx_calloc()``` public and use that instead.\n \nI\u0027m open to either option.",
      "parentUuid": "02d972e3_6f18004f",
      "revId": "deefed379027fb0a955921ec3912c37361a19e3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e6de415_618ce53c",
        "filename": "vpx/vpx_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 899,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2023-05-03T17:27:40Z",
      "side": 1,
      "message": "\u003e Should we make ```vpx_free()``` and ```vpx_calloc()``` public then?\n\u003e \n\u003e My intention for these dedicated helpers was to make it clear and easier to understand how to use the new codec control.\n\u003e \n\nIt\u0027s somewhat disjointed now with 2 helper calls an one control. If we\u0027re extending the API then why not provide all the functionality like the external frame buffers. The other option for compatibility would be to fully use the control mechanism, do the allocate in one control and free in another.\n\n\u003e If that\u0027s less of a concern, I could\n\u003e  - Remove these helpers and just allocate the memory in the test / applications with ```calloc()``` and ```free()```, or\n\u003e  - Make ```vpx_free()``` and ```vpx_calloc()``` public and use that instead.\n\u003e  \n\u003e I\u0027m open to either option.",
      "parentUuid": "9fb43c3c_fbea3463",
      "revId": "deefed379027fb0a955921ec3912c37361a19e3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6aa20e10_39ab81da",
        "filename": "vpx/vpx_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 899,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2023-05-03T19:32:57Z",
      "side": 1,
      "message": "Per offline discussion, the size of the list of TplFrameStats should be consistent and synced between libvpx and applications / rate control libraries.",
      "parentUuid": "8e6de415_618ce53c",
      "revId": "deefed379027fb0a955921ec3912c37361a19e3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}