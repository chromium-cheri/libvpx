{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dae84814_c714e4eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-05-10T21:53:18Z",
      "side": 1,
      "message": "Hi Jerome,\n\nWe can abandon this CL now. It has been replaced by https://chromium-review.googlesource.com/c/webm/libvpx/+/5379025.",
      "revId": "6f41e968fd8852e367c563f0e3c27638e261f42c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a297322_443259aa",
        "filename": "vpx/src/vpx_tpl.c",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-02-06T20:48:43Z",
      "side": 1,
      "message": "Later: We should call `vpx_free_tpl_gop_stats(tpl_gop_stats)` before returning an error.",
      "revId": "6f41e968fd8852e367c563f0e3c27638e261f42c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20665775_0e118a18",
        "filename": "vpx/src/vpx_tpl.c",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-02-06T20:48:43Z",
      "side": 1,
      "message": "Later: To make it safe for the `CHECK_FSCANF_ERROR` macro to call `vpx_free_tpl_gop_stats(tpl_gop_stats)`, we need to change this line to the following:\n\n```\n  if (tpl_gop_stats \u003d\u003d NULL) return VPX_CODEC_INVALID_PARAM;\n  tpl_gop_stats-\u003esize \u003d 0;\n  tpl_gop_stats-\u003eframe_stats_list \u003d NULL;\n  if (tpl_file \u003d\u003d NULL) return VPX_CODEC_INVALID_PARAM;\n```\n\nIf we do this, we should delete line 66.",
      "revId": "6f41e968fd8852e367c563f0e3c27638e261f42c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57b77be1_e5dbc18b",
        "filename": "vpx/src/vpx_tpl.c",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-02-06T20:48:43Z",
      "side": 1,
      "message": "Later: Check if `frame_list_size` is negative or 0. Can `frame_list_size` be 0?\n\n```\n  if (frame_list_size \u003c\u003d 0) return VPX_CODEC_ERROR;\n```",
      "revId": "6f41e968fd8852e367c563f0e3c27638e261f42c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "314305cf_aab54afd",
        "filename": "vpx/src/vpx_tpl.c",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-02-06T20:48:43Z",
      "side": 1,
      "message": "If we document that `vpx_free_tpl_gop_stats()` only needs to be called after a successful `vpx_read_tpl_gop_stats()` call, then this line is not necessary. (I expect this is the case because this is a common API design.)\n\nSo whether we need this line depends on the API contract for this function. See also my comment at line 61.",
      "revId": "6f41e968fd8852e367c563f0e3c27638e261f42c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ca607b1_686dec21",
        "filename": "vpx/src/vpx_tpl.c",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-02-06T20:48:43Z",
      "side": 1,
      "message": "Later: Check if `width`, `height`, or `num_blocks` is negative or 0.\n\n```\n    if (width \u003c\u003d 0 || height \u003c\u003d 0 || num_blocks \u003c\u003d 0) {\n      vpx_free_tpl_gop_stats(tpl_gop_stats);\n      return VPX_CODEC_ERROR;\n    }\n```",
      "revId": "6f41e968fd8852e367c563f0e3c27638e261f42c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "6f41e968fd8852e367c563f0e3c27638e261f42c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6f41e968fd8852e367c563f0e3c27638e261f42c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6f41e968fd8852e367c563f0e3c27638e261f42c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Verified=MIN"],"failingAtoms":["label:Verified=MAX"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "6f41e968fd8852e367c563f0e3c27638e261f42c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}