{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "08150993_49e1e97d",
        "filename": "vp9/encoder/vp9_pickmode.c",
        "patchSetId": 1
      },
      "lineNbr": 1701,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-06-12T21:52:32Z",
      "side": 1,
      "message": "This was discussed in https://chromium-review.googlesource.com/c/webm/libvpx/+/5407736. In portable C, we can\u0027t use an empty initializer list `{}`. I remember Microsoft Visual C++ does not accept that.\n\nWhich compiler warns about this?",
      "revId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a10c498f_77d72e61",
        "filename": "vp9/encoder/vp9_pickmode.c",
        "patchSetId": 1
      },
      "lineNbr": 1701,
      "author": {
        "id": 1132564
      },
      "writtenOn": "2024-06-12T21:57:05Z",
      "side": 1,
      "message": "This is my compile config.\n\nCC\u003d\"clang\" CXX\u003d\"clang++\" CFLAGS\u003d\"-fsanitize\u003daddress -fno-strict-aliasing -fno-omit-frame-pointer -fno-optimize-sibling-calls\" CXXFLAGS\u003d\"-fsanitize\u003daddress -fno-strict-aliasing -fno-omit-frame-pointer -fno-optimize-sibling-calls\" LDFLAGS\u003d\"-fsanitize\u003daddress\" ../configure --enable-debug\n\nHappy to drop this CL.\nJust thought it was an easy fix.",
      "parentUuid": "08150993_49e1e97d",
      "revId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cb7c4a8_77acbbc1",
        "filename": "vp9/encoder/vp9_pickmode.c",
        "patchSetId": 1
      },
      "lineNbr": 1701,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-06-12T22:00:29Z",
      "side": 1,
      "message": "Thank you. I will try to reproduce this.",
      "parentUuid": "a10c498f_77d72e61",
      "revId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d6548ca_69040ede",
        "filename": "vp9/encoder/vp9_pickmode.c",
        "patchSetId": 1
      },
      "lineNbr": 1701,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-06-12T22:52:36Z",
      "side": 1,
      "message": "Angie: I can\u0027t reproduce the compiler warnings. I have \"Debian clang version 16.0.6 (20)\". What version of clang do you have?",
      "parentUuid": "7cb7c4a8_77acbbc1",
      "revId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6147db37_7a6fa4ea",
        "filename": "vp9/encoder/vp9_pickmode.c",
        "patchSetId": 1
      },
      "lineNbr": 1701,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-06-12T23:02:36Z",
      "side": 1,
      "message": "I also tested with clang-13/14/15 and clang++-13/14/15. There are no compiler warnings.",
      "parentUuid": "5d6548ca_69040ede",
      "revId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4e59422_ab2b5c51",
        "filename": "vp9/encoder/vp9_pickmode.c",
        "patchSetId": 1
      },
      "lineNbr": 1701,
      "author": {
        "id": 1132564
      },
      "writtenOn": "2024-06-13T03:06:54Z",
      "side": 1,
      "message": "Hey Wan-Teh,\nMy version is clang version 7.0.1.\nMaybe my clang version is too old also it\u0027s not a serious warning.\nLet me just abort this CL?\nWhat do you think?",
      "parentUuid": "6147db37_7a6fa4ea",
      "revId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e06e4d9b_64b335bc",
        "filename": "vp9/encoder/vp9_pickmode.c",
        "patchSetId": 1
      },
      "lineNbr": 1701,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-06-13T05:04:53Z",
      "side": 1,
      "message": "Yes, please abandon this CL. We should fix compiler warnings, but clang version 7.0.1 is too old. You can install clang as a system package.",
      "parentUuid": "c4e59422_ab2b5c51",
      "revId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a79c19fe_0f89153e",
        "filename": "vp9/encoder/vp9_pickmode.c",
        "patchSetId": 1
      },
      "lineNbr": 1701,
      "author": {
        "id": 1132564
      },
      "writtenOn": "2024-06-13T17:31:55Z",
      "side": 1,
      "message": "Yep, will switch to newer version.",
      "parentUuid": "e06e4d9b_64b335bc",
      "revId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "a5e3238a854ba9e16659e926d0bbda5f434fb511",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}