{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "035655fc_6f1fd94a",
        "filename": "vp9/encoder/vp9_ethread.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-04T17:32:02Z",
      "side": 1,
      "message": "Another reasonable header to define `MAX_NUM_THREADS` is vp9/encoder/vp9_encoder.h because it uses `MAX_NUM_THREADS` in a struct definition.\n\n```\ntypedef struct MultiThreadHandle {\n  int allocated_tile_rows;\n  int allocated_tile_cols;\n  int allocated_vert_unit_rows;\n\n  // Frame level params\n  int num_tile_vert_sbs[MAX_NUM_TILE_ROWS];\n\n  // Job Queue structure and handles\n  JobQueue *job_queue;\n\n  int jobs_per_tile_col;\n\n  RowMTInfo row_mt_info[MAX_NUM_TILE_COLS];\n  int thread_id_to_tile_id[MAX_NUM_THREADS];  // Mapping of threads to tiles\n} MultiThreadHandle;\n```",
      "revId": "2d01ec97f82d2e46757dcaa80dd1e39e8244c5bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6774850_b6217523",
        "filename": "vp9/encoder/vp9_ethread.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-04-04T17:47:12Z",
      "side": 1,
      "message": "\u003e Another reasonable header to define `MAX_NUM_THREADS` is vp9/encoder/vp9_encoder.h because it uses `MAX_NUM_THREADS` in a struct definition.\n\u003e \n\u003e ```\n\u003e typedef struct MultiThreadHandle {\n\u003e   int allocated_tile_rows;\n\u003e   int allocated_tile_cols;\n\u003e   int allocated_vert_unit_rows;\n\u003e \n\u003e   // Frame level params\n\u003e   int num_tile_vert_sbs[MAX_NUM_TILE_ROWS];\n\u003e \n\u003e   // Job Queue structure and handles\n\u003e   JobQueue *job_queue;\n\u003e \n\u003e   int jobs_per_tile_col;\n\u003e \n\u003e   RowMTInfo row_mt_info[MAX_NUM_TILE_COLS];\n\u003e   int thread_id_to_tile_id[MAX_NUM_THREADS];  // Mapping of threads to tiles\n\u003e } MultiThreadHandle;\n\u003e ```\n\nThis header might be slightly better given the association with threads.",
      "parentUuid": "035655fc_6f1fd94a",
      "revId": "2d01ec97f82d2e46757dcaa80dd1e39e8244c5bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e369f36f_aaaaf117",
        "filename": "vp9/encoder/vp9_ethread.h",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-04T20:27:23Z",
      "side": 1,
      "message": "Yes. The reason I looked into an alternative place to define the macro is that the corresponding libaom header, av1/encoder/ethread.h, did not work. See my libaom CL https://aomedia-review.googlesource.com/c/aom/+/187361. But in libaom I can\u0027t even define this macro in av1/encoder/encoder.h. So I will go ahead and submit this CL.",
      "parentUuid": "d6774850_b6217523",
      "revId": "2d01ec97f82d2e46757dcaa80dd1e39e8244c5bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31378667_e4716530",
        "filename": "vp9/vp9_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-04T17:32:02Z",
      "side": 1,
      "message": "`MAX_NUM_THREADS` is used at line 195, so we include vp9/encoder/vp9_ethread.h for its definition.",
      "revId": "2d01ec97f82d2e46757dcaa80dd1e39e8244c5bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45eab898_52b2ccdb",
        "filename": "vp9/vp9_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 1001562
      },
      "writtenOn": "2024-04-04T17:32:02Z",
      "side": 1,
      "message": "`MAX_NUM_THREADS` is used here.",
      "revId": "2d01ec97f82d2e46757dcaa80dd1e39e8244c5bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "2d01ec97f82d2e46757dcaa80dd1e39e8244c5bd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Commit-Queue",
        "description": {
          "value": "Submit requirement for the \u0027Commit-Queue\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2d01ec97f82d2e46757dcaa80dd1e39e8244c5bd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2d01ec97f82d2e46757dcaa80dd1e39e8244c5bd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "2d01ec97f82d2e46757dcaa80dd1e39e8244c5bd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}