{
  "comments": [
    {
      "key": {
        "uuid": "117a9d68_99c47f37",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1126912
      },
      "writtenOn": "2016-09-02T17:56:45Z",
      "side": 1,
      "message": "Can we make use of this code when the compiler supports it, and leave the technically-unsafe code to platforms not supporting building atomics?",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "117a9d68_59aca78c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1126912
      },
      "writtenOn": "2016-09-02T17:56:45Z",
      "side": 1,
      "message": "int32 on windows is not atomic unless the volatile keyword is used, but I don\u0027t know when visual studio would miscompile a program to x86 because of this.\n\nhttps://msdn.microsoft.com/en-us/library/12a04hfd.aspx (see /volatile:ms)",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91668dcf_da10a55c",
        "filename": "vp8/common/threading.h",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1000853
      },
      "writtenOn": "2016-09-02T17:56:24Z",
      "side": 1,
      "message": "As said in the other patch, there\u0027s a better solution for this problem (namely using atomic variables), and I suggest to concentrate our efforts on that.\nFor the present it\u0027s perfectly fine to just keep the existing suppressions instead of having a separate synchronization logic exclusively for TSan.",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d602bbf6_3cf451ba",
        "filename": "vp8/common/threading.h",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1000963
      },
      "writtenOn": "2016-09-02T18:04:43Z",
      "side": 1,
      "message": "I tried using atomic variables through gcc ( described in commit message above) and am happy to put them in but will need to do something different on windows I thought disabling tsan altogether was dangerous in case of other possibly real problems ( like the ones at the end of the encode loop) and hoped to keep some level of tsan on even if just for internal libvpx testing.",
      "parentUuid": "91668dcf_da10a55c",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "117a9d68_b9c93b50",
        "filename": "vp8/common/threading.h",
        "patchSetId": 4
      },
      "lineNbr": 214,
      "author": {
        "id": 1126912
      },
      "writtenOn": "2016-09-02T17:56:45Z",
      "side": 1,
      "message": "Could this block be protected with something like if !MSVC, and then use real atomics?",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d602bbf6_dcfa0da3",
        "filename": "vp8/common/threading.h",
        "patchSetId": 4
      },
      "lineNbr": 214,
      "author": {
        "id": 1000963
      },
      "writtenOn": "2016-09-02T18:04:43Z",
      "side": 1,
      "message": "I think its more than !msvc ( ie like specific versions of gcc ) but it can be done and I talked about that in the message above.   \n\nIf you guys prefer that I can do it.",
      "parentUuid": "117a9d68_b9c93b50",
      "revId": "e851707683c9a912c455cc06d2cbbe6b260fdf2f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}