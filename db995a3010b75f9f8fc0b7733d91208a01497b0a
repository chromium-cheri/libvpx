{
  "comments": [
    {
      "key": {
        "uuid": "a47f9520_87a02eef",
        "filename": "vp8/common/findnearmv.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2015-08-26T00:04:27Z",
      "side": 1,
      "message": "You have to also remove the \"static\".",
      "revId": "db995a3010b75f9f8fc0b7733d91208a01497b0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c42ba915_665baecd",
        "filename": "vp8/common/findnearmv.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2015-08-26T00:27:22Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s true. We still want static visibility, and in some cases INLINE is unset so we definitely don\u0027t want to fall back to globally visible functions.",
      "parentUuid": "a47f9520_87a02eef",
      "revId": "db995a3010b75f9f8fc0b7733d91208a01497b0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4700952_7bbe02ac",
        "filename": "vp8/common/findnearmv.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2015-08-26T00:55:03Z",
      "side": 1,
      "message": "clients who care about this probably build with -fvisiblity\u003dhidden / a .def file, right? (Well, external clients probably don\u0027t call these inline functions at all, I guess.)\n\nIn what cases is INLINE not set? It\u0027s part of C99, and while MSVC doesn\u0027t support C99 yet, it does support __inline.",
      "parentUuid": "c42ba915_665baecd",
      "revId": "db995a3010b75f9f8fc0b7733d91208a01497b0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "048f817d_a768d0e8",
        "filename": "vp8/common/findnearmv.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2015-08-26T01:01:32Z",
      "side": 1,
      "message": "Hmm I\u0027m probably wrong about having INLINE unset. I could\u0027ve sworn that was a thing but we only have MSVC - force inline and an \u0027else\u0027 condition for regular inline. So static may not be required.",
      "parentUuid": "c4700952_7bbe02ac",
      "revId": "db995a3010b75f9f8fc0b7733d91208a01497b0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "248c8586_3895d496",
        "filename": "vp8/common/findnearmv.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2015-08-26T17:21:57Z",
      "side": 1,
      "message": "Talked to James about this. While it\u0027s true you don\u0027t need the static in c++ (and probably c99) we actually target c89. Mozilla went through and changed all the vp8 decoder comments to /* */ style instead of // (or the other way around, I forget)\n\nBut I was definitely wrong about the undefined INLINE problem. That shouldn\u0027t happen.",
      "parentUuid": "048f817d_a768d0e8",
      "revId": "db995a3010b75f9f8fc0b7733d91208a01497b0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "248c8586_33d9756a",
        "filename": "vp8/common/findnearmv.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2015-08-26T17:42:51Z",
      "side": 1,
      "message": "Are you sure about the c89 thing? It looks like you define INLINE to inline for gcc ( https://code.google.com/p/chromium/codesearch#chromium/src/third_party/libvpx/source/libvpx/vpx/vpx_integer.h\u0026l\u003d24 ), and that spelling isn\u0027t supported in c89 (it needs to be __inline__ there). Oh, I guess with -std\u003dgnu89 the inline spelling is supported.\n\nBut it looks like c99 \n\nMaybe something like this could work?\n\n#ifdef __cplusplus\n#define INLINE inline\n#else\n#define INLINE static inline\n#endif\n\n(and then you\u0027d only write INLINE on your functions)\n\nThis seems to do the right thing with all of gnu89 C, C99, and C++, and it gets rid of the warning, and it causes the function to not have a separate copy in each C++ TU that uses the inline function.",
      "parentUuid": "248c8586_3895d496",
      "revId": "db995a3010b75f9f8fc0b7733d91208a01497b0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c42ba915_2cc035f8",
        "filename": "vp8/common/findnearmv.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2015-08-26T17:46:56Z",
      "side": 1,
      "message": "this code has no chance of building as c++, but the rest is a good suggestion based on the flags passed to the compiler. you\u0027re right gnu89/c90 is probably a better way to look at it. at this point mozilla has likely relaxed or is stripping the comments because /* */ aren\u0027t enforced.",
      "parentUuid": "248c8586_33d9756a",
      "revId": "db995a3010b75f9f8fc0b7733d91208a01497b0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4750d3f_911ce8f6",
        "filename": "vp8/common/findnearmv.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2015-08-26T05:44:44Z",
      "side": 1,
      "message": "alignment is off",
      "revId": "db995a3010b75f9f8fc0b7733d91208a01497b0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4700952_7b0da1ef",
        "filename": "vp8/common/findnearmv.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1117029
      },
      "writtenOn": "2015-08-26T17:21:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4750d3f_911ce8f6",
      "revId": "db995a3010b75f9f8fc0b7733d91208a01497b0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}