{
  "comments": [
    {
      "key": {
        "uuid": "5a142433_02d93055",
        "filename": "vp10/common/reconinter.c",
        "patchSetId": 3
      },
      "lineNbr": 1041,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2016-07-08T14:44:41Z",
      "side": 1,
      "message": "these mask values are based on the MASK_BITS value that is buried (several times!) deep inside the vpx_dsp/ implementation.\nThis is a liability. There should be a common definition somewhere in some .h",
      "range": {
        "startLine": 1041,
        "startChar": 13,
        "endLine": 1041,
        "endChar": 20
      },
      "revId": "2f04c85669b244304c940efc22e161392d37c14d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a2e9c8f_abb0099d",
        "filename": "vp10/common/reconinter.c",
        "patchSetId": 3
      },
      "lineNbr": 1041,
      "author": {
        "id": 1137274
      },
      "writtenOn": "2016-07-08T15:10:34Z",
      "side": 1,
      "message": "Agreed. Somebody needs to go and fix this large scale in the whole codebase. \n\nHowever, I did not write the original, and fixing this needs to be a separate patch, it has nothing to do with the optimizations in this patch.",
      "parentUuid": "5a142433_02d93055",
      "range": {
        "startLine": 1041,
        "startChar": 13,
        "endLine": 1041,
        "endChar": 20
      },
      "revId": "2f04c85669b244304c940efc22e161392d37c14d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a142433_e2d51c1b",
        "filename": "vpx_dsp/blend_hmask6.c",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2016-07-08T14:44:41Z",
      "side": 1,
      "message": "see other comment",
      "revId": "2f04c85669b244304c940efc22e161392d37c14d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a2e9c8f_8bad4d47",
        "filename": "vpx_dsp/blend_hmask6.c",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1137274
      },
      "writtenOn": "2016-07-08T15:10:34Z",
      "side": 1,
      "message": "Not really. These functions use 6 bit masks. You could have a blend_mask8 to use masks from [0, 256], which the interintra predictors use for example. I could call MASK_BITS whatever other name.",
      "parentUuid": "5a142433_e2d51c1b",
      "revId": "2f04c85669b244304c940efc22e161392d37c14d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a142433_c2d21831",
        "filename": "vpx_dsp/blend_vmask6.c",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2016-07-08T14:44:41Z",
      "side": 1,
      "message": "consts uint16_t* ...",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 10
      },
      "revId": "2f04c85669b244304c940efc22e161392d37c14d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a2e9c8f_0b7b9da4",
        "filename": "vpx_dsp/blend_vmask6.c",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1137274
      },
      "writtenOn": "2016-07-08T15:10:34Z",
      "side": 1,
      "message": "src0 or src1 might alias dst. Are you sure this would be safe const?",
      "parentUuid": "5a142433_c2d21831",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 10
      },
      "revId": "2f04c85669b244304c940efc22e161392d37c14d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a142433_2d8f853f",
        "filename": "vpx_dsp/blend_vmask6.c",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2016-07-08T15:47:10Z",
      "side": 1,
      "message": "it\u0027s ok to have a non-const alias for writing.\n const\u0027ing the \u0027src\u0027 parameter is a protection against code trying to mistakenly write to *src instead of *dst.",
      "parentUuid": "9a2e9c8f_0b7b9da4",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 10
      },
      "revId": "2f04c85669b244304c940efc22e161392d37c14d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a2e9c8f_0b4ddd7c",
        "filename": "vpx_dsp/blend_vmask6.c",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1137274
      },
      "writtenOn": "2016-07-08T15:58:05Z",
      "side": 1,
      "message": "\u003e const\u0027ing the \u0027src\u0027 parameter is a protection against code trying to mistakenly write to *src instead of *dst.\nYes, I know that.\n\nI was worried about this:\nhttp://www.compileroptimizations.com/category/alias_optimization_const_qualifier.htm\n\nBut if you can take the note at the bottom of that website at face value, then it should be ok.\n\nLet\u0027s leave this for now and I will submit a patch which changes all prototypes and related uses to const there are enough to cases to warrant a separate change.",
      "parentUuid": "5a142433_2d8f853f",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 10
      },
      "revId": "2f04c85669b244304c940efc22e161392d37c14d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a142433_a2cf2489",
        "filename": "vpx_dsp/vpx_dsp_rtcd_defs.pl",
        "patchSetId": 3
      },
      "lineNbr": 966,
      "author": {
        "id": 1000898
      },
      "writtenOn": "2016-07-08T14:44:41Z",
      "side": 1,
      "message": "signatures should be \u0027const uint8_t* src...\u0027 for sources.",
      "range": {
        "startLine": 966,
        "startChar": 39,
        "endLine": 966,
        "endChar": 46
      },
      "revId": "2f04c85669b244304c940efc22e161392d37c14d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a2e9c8f_eb7f318d",
        "filename": "vpx_dsp/vpx_dsp_rtcd_defs.pl",
        "patchSetId": 3
      },
      "lineNbr": 966,
      "author": {
        "id": 1137274
      },
      "writtenOn": "2016-07-08T15:10:34Z",
      "side": 1,
      "message": "see other comment",
      "parentUuid": "5a142433_a2cf2489",
      "range": {
        "startLine": 966,
        "startChar": 39,
        "endLine": 966,
        "endChar": 46
      },
      "revId": "2f04c85669b244304c940efc22e161392d37c14d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}