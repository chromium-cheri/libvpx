{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f6c9de25_313d5ae1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1171444
      },
      "writtenOn": "2022-11-11T21:09:47Z",
      "side": 1,
      "message": "Hi Hiro,\n\nI added frame param to the API for PostEncodeUpdate.\n\nCould you please test it?\n\nThanks.",
      "revId": "3a9cf4abfb1316cb047815b42b522d37ab4ba360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1599b2bc_c6b4bf92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1196199
      },
      "writtenOn": "2023-02-13T05:57:23Z",
      "side": 1,
      "message": "Hi Jerome, this patch doesn\u0027t work and I cannot debug it by myself; in L3T1 encoding, the produced bitrate in L1 and L2 overshoot very much. I didn\u0027t run L3T3 but I expect the same problem will happen.\nIt seems like some side-effects in ComputQP() and PostEncode() causes some bugs in calling them like ComputeQP() to L1, L2, L3 and thereafter PostEncodeEncode() to L1, L2, L3.\nCould you debug it?",
      "revId": "3a9cf4abfb1316cb047815b42b522d37ab4ba360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10fe43b8_11e220cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1126910
      },
      "writtenOn": "2023-02-13T06:32:19Z",
      "side": 1,
      "message": "Is this for the parallel encode? We should add a testcase in vp9_ratecrtrl_rtc_test.cc to verify issues for this type of encode.\n\nThe testcase there currently is always sequential: {ComputeQP(), PostEncode()} is done for SLO, SL1, SL2. For parallel encode we should do ComputeQP() for SL0,SL1,SL2, and then PostEncode() for SL0,SL1,SL2?",
      "parentUuid": "1599b2bc_c6b4bf92",
      "revId": "3a9cf4abfb1316cb047815b42b522d37ab4ba360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57708139_443da1b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1196199
      },
      "writtenOn": "2023-02-13T06:55:29Z",
      "side": 1,
      "message": "Yes, I agree with you. It is great to increase the test coverage more in the rc test.",
      "parentUuid": "10fe43b8_11e220cd",
      "revId": "3a9cf4abfb1316cb047815b42b522d37ab4ba360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07eb0efe_e8101142",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1126910
      },
      "writtenOn": "2023-02-13T07:00:22Z",
      "side": 1,
      "message": "Ok. We did recently add more tests for dynamic layer change and key frames in svc, but there is no test for parallel encode. We\u0027ll add one for that.",
      "parentUuid": "57708139_443da1b6",
      "revId": "3a9cf4abfb1316cb047815b42b522d37ab4ba360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}