{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e3fd50ef_d6b649b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1537919
      },
      "writtenOn": "2022-08-15T22:03:32Z",
      "side": 1,
      "message": "I implemented Scott\u0027s suggestion for vqdmulhq_s32() and performance improved even more. Tests pass and checksums are still correct ðŸ˜Š",
      "revId": "644ef514514d55344bc39ff51fe150ef70ba52f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23459b9d_e93f44d7",
        "filename": "vpx_dsp/arm/highbd_quantize_neon.c",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1000882
      },
      "writtenOn": "2022-08-15T23:14:09Z",
      "side": 1,
      "message": "I\u0027ve been changing these to VPX_FORCE_INLINE.",
      "range": {
        "startLine": 25,
        "startChar": 7,
        "endLine": 25,
        "endChar": 13
      },
      "revId": "644ef514514d55344bc39ff51fe150ef70ba52f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a06cda42_5976cb3e",
        "filename": "vpx_dsp/arm/highbd_quantize_neon.c",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1537919
      },
      "writtenOn": "2022-08-16T08:16:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23459b9d_e93f44d7",
      "range": {
        "startLine": 25,
        "startChar": 7,
        "endLine": 25,
        "endChar": 13
      },
      "revId": "644ef514514d55344bc39ff51fe150ef70ba52f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eebe4dd0_8da3754f",
        "filename": "vpx_dsp/arm/highbd_quantize_neon.c",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1000882
      },
      "writtenOn": "2022-08-15T23:14:09Z",
      "side": 1,
      "message": "You could expand dequant to 32 bits (int32x4) outside the loop, then vdupq_lane_s32(dequant, 1) after the first multiply. It would save a vmovl along with any other overhead with the get low/high. Just noticed you can do the same with quant, quant_shift, round, and zbin.",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 91,
        "endChar": 69
      },
      "revId": "644ef514514d55344bc39ff51fe150ef70ba52f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87d3b164_6eb58f2b",
        "filename": "vpx_dsp/arm/highbd_quantize_neon.c",
        "patchSetId": 9
      },
      "lineNbr": 91,
      "author": {
        "id": 1537919
      },
      "writtenOn": "2022-08-16T08:16:28Z",
      "side": 1,
      "message": "That does indeed improve performance. Can I assume that all elements -except the first- of these vectors will be the same at all times? That would simplify things a lot, as I could indeed make use of a single int32x4 vector instead.",
      "parentUuid": "eebe4dd0_8da3754f",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 91,
        "endChar": 69
      },
      "revId": "644ef514514d55344bc39ff51fe150ef70ba52f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}