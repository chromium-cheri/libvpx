{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "369d68cd_b605527b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2022-10-27T13:41:48Z",
      "side": 1,
      "message": "Nit: \"do not provide the necessary precision\" would be better here.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 22
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3346c6ad_f35d8309",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1537919
      },
      "writtenOn": "2022-10-31T08:22:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "369d68cd_b605527b",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 22
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ed9fc8c_f16f7a66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1537919
      },
      "writtenOn": "2022-10-27T07:07:06Z",
      "side": 1,
      "message": "Hi guys, apologies for the large patchset, however I couldn\u0027t make it smaller as the changes affected quite a few files. Getting the butterfly functions named in a uniform way made it significantly easier to port the 32x32 DCT to highbd (followed in a next patchset) and also much easier to read and debug the code. I tried getting some fast variants of the two coeff butterfly function to use a pair of vqrdmulh_s16, vqrdmlah_s16/vqrdmlsh_s16 (and their 32-bit variants), it worked but unfortunately I couldn\u0027t get the needed accuracy. I\u0027ll keep investigating this though to see if I could use them in some particular usecases.",
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d009e595_8f8a359d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2022-10-27T13:41:48Z",
      "side": 1,
      "message": "Nice patch! There are a few issues though - see the comments for details.",
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87758b73_ecb6adf4",
        "filename": "vpx_dsp/arm/fdct32x32_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2022-10-27T13:41:48Z",
      "side": 1,
      "message": "Loading these values multiple times - instead of explicitly storing them in registers and reusing them - is problematic, and leads to double the required number of loads; and some spillage to the stack.\n\nIf we can\u0027t use something like \u0027restrict\u0027, to tell the compiler there\u0027s no aliasing going on, try something like the second implementation here: https://godbolt.org/z/G4denv9eM",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 57,
        "endChar": 1
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bda00a70_eb3c681e",
        "filename": "vpx_dsp/arm/fdct32x32_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2022-10-27T21:18:13Z",
      "side": 1,
      "message": "Ignore the above - once this is inlined the compiler works out that there is no aliasing. Apologies for jumping the gun on this..",
      "parentUuid": "87758b73_ecb6adf4",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 57,
        "endChar": 1
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdfe1245_ce9abec3",
        "filename": "vpx_dsp/arm/fdct32x32_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2022-10-27T13:41:48Z",
      "side": 1,
      "message": "On first inspection (throwing this into Compiler Explorer) seems to give the same issue as above - double the number of loads.\n\nI should probably check what happens once everything gets put together though... rather than just taking chunks in isolation.",
      "range": {
        "startLine": 151,
        "startChar": 2,
        "endLine": 167,
        "endChar": 35
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be7d7540_c2a90a53",
        "filename": "vpx_dsp/arm/fdct32x32_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2022-10-27T21:18:13Z",
      "side": 1,
      "message": "Compiling the whole thing does sort out all of the aliasing issues - ignore the above comment.",
      "parentUuid": "fdfe1245_ce9abec3",
      "range": {
        "startLine": 151,
        "startChar": 2,
        "endLine": 167,
        "endChar": 35
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a094de08_4a5d49fd",
        "filename": "vpx_dsp/arm/fdct32x32_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2022-10-31T17:49:00Z",
      "side": 1,
      "message": "\u003e Compiling the whole thing does sort out all of the aliasing issues - ignore the above comment.\n\nThanks for following up. We have benefited from using restrict in other projects, so there\u0027s definitely room in some areas here where things aren\u0027t necessarily inlined.",
      "parentUuid": "be7d7540_c2a90a53",
      "range": {
        "startLine": 151,
        "startChar": 2,
        "endLine": 167,
        "endChar": 35
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc200f05_b70872f7",
        "filename": "vpx_dsp/arm/fdct32x32_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1537919
      },
      "writtenOn": "2022-11-01T09:06:46Z",
      "side": 1,
      "message": "Just to be clear, would you like me to add \u0027restrict\u0027 here in this case?",
      "parentUuid": "a094de08_4a5d49fd",
      "range": {
        "startLine": 151,
        "startChar": 2,
        "endLine": 167,
        "endChar": 35
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c604246_23e772a5",
        "filename": "vpx_dsp/arm/fdct32x32_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1247893
      },
      "writtenOn": "2022-11-01T11:17:39Z",
      "side": 1,
      "message": "Based on what I\u0027ve seen with Clang 14, I don\u0027t think it\u0027s necessary right here right now. At some later point however, I do think it would be worth doing a pass of the whole code base adding in restrict where there is the potential for aliasing.",
      "parentUuid": "cc200f05_b70872f7",
      "range": {
        "startLine": 151,
        "startChar": 2,
        "endLine": 167,
        "endChar": 35
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4acb164_a13cea50",
        "filename": "vpx_dsp/arm/fdct_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000882
      },
      "writtenOn": "2022-10-27T14:29:46Z",
      "side": 1,
      "message": "../libvpx/vpx_dsp/arm/fdct_neon.h:50:38: warning: implicit conversion loses integer precision: \u0027tran_high_t\u0027 (aka \u0027long\u0027) to \u0027int32_t\u0027 (aka \u0027int\u0027) [-Wshorten-64-to-32]\n  int32x4_t c \u003d vdupq_n_s32(constant \u003c\u003c 17);\n  \nconstant should be tran_coef_t.",
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1ddb1bc_23191e6a",
        "filename": "vpx_dsp/arm/fdct_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1537919
      },
      "writtenOn": "2022-10-31T08:22:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4acb164_a13cea50",
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da2e330d_4671842d",
        "filename": "vpx_dsp/arm/fdct_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1000882
      },
      "writtenOn": "2022-10-27T14:29:46Z",
      "side": 1,
      "message": "tran_coef_t",
      "range": {
        "startLine": 80,
        "startChar": 48,
        "endLine": 80,
        "endChar": 59
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87a890a7_6c796382",
        "filename": "vpx_dsp/arm/fdct_neon.h",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1537919
      },
      "writtenOn": "2022-10-31T08:22:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2e330d_4671842d",
      "range": {
        "startLine": 80,
        "startChar": 48,
        "endLine": 80,
        "endChar": 59
      },
      "revId": "8f242cef6be30081393858c4740740eb2ecb1399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}