{
  "comments": [
    {
      "key": {
        "uuid": "AAAAbn//44k\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-06-29T03:21:32Z",
      "side": 1,
      "message": "2013",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//44g\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-06-29T03:21:32Z",
      "side": 1,
      "message": "const not needed, here and below",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//44c\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-06-29T03:21:32Z",
      "side": 1,
      "message": "nit:alignment here and below",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//18I\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-07-02T22:39:29Z",
      "side": 1,
      "message": "Add braces for loops and conditionals if another part uses them.\n\nhttp://google-styleguide.googlecode.com/svn/trunk/cppguide.xml#Conditionals",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//44U\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-06-29T03:21:32Z",
      "side": 1,
      "message": "80 char",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//15M\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-07-02T22:39:29Z",
      "side": 1,
      "message": "Do you need to use 128? Could you use something smaller like 64?",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//18E\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-07-02T22:39:29Z",
      "side": 1,
      "message": "Not used.",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//44E\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-06-29T03:21:32Z",
      "side": 1,
      "message": "const",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//170\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-07-02T22:39:29Z",
      "side": 1,
      "message": "You don\u0027t need to perform the border check for every index. How about something like:\n\nconst int top_left \u003d (BorderTop() * kOuterBlockSize) + BorderLeft();\nconst int bottom_right \u003d ((BorderTop() + Height() - 1) * kOuterBlockSize) +\n                         (BorderLeft() + Width());\n\nmemset(output_, 255, top_left);\n\nmemset(reference_, 255, top_left);\n\nfor (int i \u003d top_left; i \u003c bottom_right; ++i) {\n  if (IsIndexInBorder(i))\n    reference_[i] \u003d output_[i] \u003d 255;\n  else\n    reference_[i] \u003d output_[i] \u003d prng.Rand8Extremes();\n}\n\nmemset(output_ + bottom_right, 255, kOutputBufferSize - bottom_right);\n\nmemset(reference_ + bottom_right, 255, kOutputBufferSize -bottom_right);",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//44A\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-06-29T03:21:32Z",
      "side": 1,
      "message": "const?",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//17c\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-07-02T22:39:29Z",
      "side": 1,
      "message": "You could do something like the Setup() with memcmp to speed up this function.",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//44I\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-06-29T03:21:32Z",
      "side": 1,
      "message": "ws",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//15Y\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-07-02T22:39:29Z",
      "side": 1,
      "message": "This is a lot of iterations. Do you need to test all 2^16 values?\n\nMaybe test SHRT_MIN, -256 to 256, SHRT_MAX-1?",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbn//44M\u003d",
        "filename": "test/add_constant_residual_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1002054
      },
      "writtenOn": "2013-06-29T03:21:32Z",
      "side": 1,
      "message": "80",
      "revId": "e42bc446eded79de787453494b5b1991712c3caa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}