{
  "comments": [
    {
      "key": {
        "uuid": "2e6aced9_b10bd0c9",
        "filename": "test/array.h",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-06-22T03:34:21Z",
      "side": 1,
      "message": "ARRAY_H_",
      "revId": "95c2eb91c4ad7c04c48677986ee38a0a828dfaee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e538255_b8c9d95d",
        "filename": "test/array.h",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1137274
      },
      "writtenOn": "2016-06-22T09:37:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e6aced9_b10bd0c9",
      "revId": "95c2eb91c4ad7c04c48677986ee38a0a828dfaee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e7046c4_5f93636f",
        "filename": "test/array.h",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-06-22T03:34:21Z",
      "side": 1,
      "message": "this seems wrong, do you want vpx_integer.h for some of this perhaps?",
      "revId": "95c2eb91c4ad7c04c48677986ee38a0a828dfaee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea8525e_a4e942b6",
        "filename": "test/array.h",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1137274
      },
      "writtenOn": "2016-06-22T09:37:20Z",
      "side": 1,
      "message": "It is for the IS_POWER_OF_TWO predicate macro. I agree it looks odd though. Probably a later refactor?",
      "parentUuid": "6e7046c4_5f93636f",
      "revId": "95c2eb91c4ad7c04c48677986ee38a0a828dfaee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ed5a6ce_9710ec4d",
        "filename": "test/array.h",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-06-22T03:34:21Z",
      "side": 1,
      "message": "prefer American spellings; Specialisation -\u003e Specialization",
      "revId": "95c2eb91c4ad7c04c48677986ee38a0a828dfaee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e6d0a11_56e5f4e4",
        "filename": "test/array.h",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1137274
      },
      "writtenOn": "2016-06-22T09:37:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ed5a6ce_9710ec4d",
      "revId": "95c2eb91c4ad7c04c48677986ee38a0a828dfaee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e67020f_0dbe21c6",
        "filename": "test/array.h",
        "patchSetId": 3
      },
      "lineNbr": 246,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2016-06-22T03:34:21Z",
      "side": 1,
      "message": "as an extension to gtest yo could use GTEST_DISALLOW_COPY_AND_ASSIGN_",
      "revId": "95c2eb91c4ad7c04c48677986ee38a0a828dfaee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e538255_98c6954b",
        "filename": "test/array.h",
        "patchSetId": 3
      },
      "lineNbr": 246,
      "author": {
        "id": 1137274
      },
      "writtenOn": "2016-06-22T09:37:20Z",
      "side": 1,
      "message": "Done, though note that there isn\u0027t anything gtest specific in here apart from the macros GTEST_DISALLOW_COPY_AND_ASSIGN_ and GTEST_COMPILE_ASSERT_",
      "parentUuid": "4e67020f_0dbe21c6",
      "revId": "95c2eb91c4ad7c04c48677986ee38a0a828dfaee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}